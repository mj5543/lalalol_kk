{"version":3,"sources":["redux/modules/auth.js","api/auth.js","components/lib/storage.js","redux/modules/users.js","components/navs/NavbarExpandTop.js","components/contents/MainContents.js","pages/Main.js","components/login/GoogleLoginBtn.js","components/auth/InputWithLabel.js","pages/SignIn.js","components/lib/ip/IpAddress.js","pages/SignUp.js","redux/connectMapProps.js","components/posts/ThumbnailList.js","components/posts/CategorySeletctList.js","components/lib/dataDisplay/DataTableCompoenet.js","components/posts/PostList.js","components/lib/code/PrismCode.js","components/lib/editor/DraftEditor.js","components/lib/editor/ToastUIEditor.js","components/posts/Comments.js","components/posts/PostDetail.js","pages/Posts.js","components/login/UserCheck.js","components/contents/ActivityContents.js","pages/Profile.js","components/login/FaceBookLoginBtn..js","components/login/InputContents.js","components/auth/BaseContainer.js","components/auth/AuthContainer.js","components/category/menual/react/LifeCycle.js","components/category/menual/react/ReactEvent.js","components/category/menual/react/Intro.js","components/resume/Resume.js","components/contents/ContentsDetail.js","components/contents/ContentsContainer.js","components/admin/AdminContents.js","components/admin/AdminContainer.js","components/navs/NavSidebar.js","components/navs/SidebarContainer.js","components/admin/UserManagement.js","pages/Testing.js","App.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["CHANGE_INPUT","INITIALIZE_FORM","changeInput","createAction","initializeForm","CHECK_EMAIL_EXISTS","CHECK_USERNAME_EXISTS","checkEmailExists","email","axios","get","checkUsernameExists","username","setUserTemp","type","payload","id","token","initialState","Map","register","form","password","passwordConfirm","exists","login","handleActions","state","action","name","value","setIn","initialForm","set","pender","onSuccess","data","storage","key","object","localStorage","JSON","stringify","parse","e","remove","removeItem","SET_PROVIDE_USER_CHECK","SET_USER_INFO","LOGOUT","GET_LOCATION_IP","SET_CATEGORY_GROUP","logged","isMasterUser","userInfo","ipInfo","provideInfo","categoryGroups","applySetProvideUserCheck","applyUserInfo","grade","applyIpInfo","userLogout","applyCategoryGroups","actionCreators","getProvideUserCheck","params","dispatch","getState","a","post","res","items","console","log","isEmpty","result","setUserInfo","logout","getIpInfo","fetch","ipData","json","locationIp","IPv4","setCaterotyGroups","reducer","withRouter","connect","users","userCheck","userActions","info","authActions","props","LogButtonText","buttonEl","signupEl","className","onClick","history","push","useEffect","href","app_image_url","style","width","height","src","alt","fontFamily","fontSize","MainContents","_getList","bodyEle","boardList","setState","loading","dataList","_getDataList","map","d","preContent","content","replace","length","substr","concat","goDetail","pathname","search","group_type","rePassword","pMessage","show","blindStyle","groupType","columns","bind","this","list","listItems","item","index","to","pathInfo","url","location","subject","dateTimeFormat","created_at","date","moment","format","padding","Row","xs","md","Col","Card","minHeight","Header","Title","Body","Text","textOverflow","dangerouslySetInnerHTML","__html","Component","Main","require","config","clientId","process","REACT_APP_GOOGLE_AUTH_CLIENT_ID","GoogleLoginBtn","onGoogleLogin","useState","setIsLoggedIn","response","googleId","profileObj","imageUrl","appId","provider","render","renderProps","disabled","responseType","onFailure","error","cookiePolicy","Wrapper","styled","div","Label","oc","gray","Input","input","InputWithLabel","label","rest","AuthActions","bindActionCreators","user","useReducer","provideUserCheck","toJS","onChange","target","placeholder","checked","IpAddress","componentDidMount","ip","locationInfo","crypto","solt","REACT_APP_HIDDEN_KEY","setAppId","setProvider","isDisabled","setIsDisabled","inputs","setInputs","nameMessage","emailMessage","passwordMessage","nameInvalid","emailInvalid","passwordInvalid","validations","setValidations","inputValidation","flag","isEmail","isLength","min","onDateChange","setContents","onSignUp","doSignUp","cipher","createCipher","update","outPass","final","reqParams","toast","success","ButtonElements","elements","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","imageList","icon","color","ThumbnailList","ImageItemList","classes","ImageListItem","listStyle","image","maxHeight","ImageListItemBar","title","subtitle","actionIcon","IconButton","formControl","margin","spacing","minWidth","selectEmpty","CategorySeletctList","React","depth1","depth2","depth1List","depth2List","_","targetCode","findCode","Object","targetCategory","category","find","node_code","forEach","sub","handleChange","event","float","FormControl","NativeSelect","inputProps","node_nm","DataTableComponent","isLoading","setIsLoading","setDataList","setSelectedRowItem","sortIcon","progress","CircularProgress","size","noHeader","responsive","progressComponent","customStyles","rows","headCells","paddingLeft","paddingRight","fontWeight","lineHeight","cells","defaultSortAsc","pagination","paginationPerPage","highlightOnHover","noDataComponent","progressPending","selectableRows","isSelectable","onSelectedRowsChange","selectedRows","hasOwnProperty","onSelectedChagenItemCB","PostList","_getCateroeyList","_setContents","handleConfirmPassword","writeButton","contentEl","_getDataColumns","_setWriteButton","btnEl","hash","textDecoration","selector","row","sortable","grow","compact","cell","right","boxShadow","PrismCode","code","language","Prism","highlightAll","DraftEditor","decorator","PrismDecorator","prism","defaultSyntax","editorState","EditorState","createEmpty","_getData","postId","onEditorStateChange","currentState","htmlContent","draftToHtml","convertToRaw","getCurrentContent","editContent","uploadImageCallBack","file","tempFileType","tempImageUrl","awsconfig","bucketName","REACT_APP_S3_BUCKET_NAME","region","REACT_APP_AWS_REGION","accessKeyId","REACT_APP_AWS_ACCESS_KEY_ID","secretAccessKey","REACT_APP_AWS_SECRET_ACCESS_KEY","Promise","resolve","reject","uploadFile","then","link","catch","err","calcState","prevProps","prevState","onTemperatureChange","blocksFromHTML","convertFromHTML","contentBlocks","ContentState","createFromBlockArray","entityMap","createWithContent","contentState","contentStateWithEntity","createEntity","newEditorState","currentContent","entityKey","getLastCreatedEntityKey","insertedEditorState","AtomicBlockUtils","insertAtomicBlock","contentBlock","getType","component","MediaComponent","editable","foo","wrapperClassName","editorClassName","toolbarClassName","toolbar","inline","inDropdown","textAlign","uploadCallback","inputAccept","previewImage","urlEnabled","uploadEnabled","present","mandatory","defaultSize","localization","locale","spellCheck","block","text","ToastUIEditor","editorRef","createRef","onChanged","_setEditorHTML","html","current","getInstance","setHTML","getHTML","previewStyle","initialEditType","ref","plugins","codeSyntaxHighlight","highlighter","Comments","setContent","now","Date","userId","for","PostDetail","deleteBtnEl","updateBtnEl","modeChange","saveButtonText","deletePost","titleChanged","mode","actionButtonText","modalShow","actionModeChange","changedContent","query","queryString","delete","obj","REACT_APP_IMAGE_PATH","setModalShow","isRegist","_registContent","_updateContent","_contentValidation","matchUrl","formData","FormData","append","headers","editEl","isShow","contentElement","_editorElement","marginBottom","MyVerticallyCenteredModal","onHide","onHideConfirm","goList","Modal","centered","Footer","match","UserCheck","products","cart","quantity","totalAmount","ActivityContents","user_image","Profile","REACT_APP_FACEBOOK_TEST_APP_ID","REACT_APP_FACEBOOK_APP_ID","FaceBookLoginBtn","onFacebookLogin","responseFacebook","userID","picture","graphDomain","fields","autoLoad","callback","InputContents","store","queryParams","updateRes","setProvideInfo","userEmailPassCheck","onInputChange","AuthContainer","checkUser","window","includes","getIp","LifeCycle","wellowHighlight","class","ReactEvent","Intro","Resume","_getHello","contentsEl","cardStyle","borderLeft","borderRight","alignCenter","verticalAlign","borderBottom","rowSpan","scope","colSpan","border","REACT_APP_CONTENTS_PASSWORD","hello","isShowContent","ContentsDetail","contentType","viewContent","AdminContents","marginTop","_handleChange","_getSubCategory","_setFieldValue","textHandleChange","radioHandleChange","onAddClick","_registCategoryGroup","currentTarget","onModifyClick","_updateCategoryGroup","onDeleteClick","category1","category2","category3","pNode1","pNode2","pNode3","categoryName1","categoryName2","categoryName3","categoryCd1","categoryCd2","categoryCd3","categoryUse1","categoryUse2","categoryUse3","_getCategory","targetItem","targetList","targetNm","targetInputNm","node_id","use_yn","pNodeId","depth","nodeCode","nodeName","nodePath","useYN","subYN","_fieldReset","nodeId","marginRight","InputLabel","Select","labelId","MenuItem","TextField","RadioGroup","FormControlLabel","control","Radio","Button","MenuPostCategory","headerInfo","menuInfo","isActive","indexOf","activeClassName","SubCategory","MenuSingleCategory","exact","MenuHeader","NavSidebar","initialize","initializeSimplebar","initializeSidebarCollapse","document","getElementsByClassName","simplebarInstance","SimpleBar","querySelectorAll","addEventListener","recalculate","sidebarElement","sidebarToggleElement","classList","toggle","dispatchEvent","Event","categoryList","groups","uniqLen","depth0","i","firstItem","tempObj","tmpArr1","filter","pnode_id","r","subList","assign","menu","UserManagement","handlePassword","toString","tempList","_getPassword","editableItem","setEditableItem","_passwordForm","passwordChange","inputName","changedPassword","output","create_at","pass","decipher","createDecipher","deoutput","Testing","App","path","ContentsContainer","BaseContainer","SignUp","Posts","AdminContainer","position","hideProgressBar","autoClose","createBrowserHistory","middlewares","thunk","routerMiddleware","combineReducers","auth","routing","routerReducer","createStore","applyMiddleware","Root","subscribe","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","getElementById","URL","origin","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.081e558e.chunk.js","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport { pender } from 'redux-pender';\r\nimport * as AuthAPI from '../../api/auth';\r\nimport { Map } from 'immutable';\r\n\r\nconst CHANGE_INPUT = 'auth/CHANGE_INPUT'; // input 값 변경\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM'; // form 초기화\r\n\r\nexport const changeInput = createAction(CHANGE_INPUT); //  { form, name, value }\r\nexport const initializeForm = createAction(INITIALIZE_FORM); // form \r\n\r\nconst CHECK_EMAIL_EXISTS = 'auth/CHECK_EMAIL_EXISTS'; // 이메일 중복 확인\r\nconst CHECK_USERNAME_EXISTS = 'auth/CHECK_USERNAME_EXISTS'; // 아이디 중복 확인\r\nconst SET_USER_TEMP = 'SET_USER_TEMP'\r\n\r\n\r\nexport const checkEmailExists = createAction(CHECK_EMAIL_EXISTS, AuthAPI.checkEmailExists); // email\r\nexport const checkUsernameExists = createAction(CHECK_USERNAME_EXISTS, AuthAPI.checkUsernameExists); // username\r\nexport const setUserTemp = ({ id, username, token }) => ({\r\n  type: SET_USER_TEMP,\r\n  payload: {\r\n    id,\r\n    username,\r\n    token\r\n  }\r\n});\r\n\r\nconst initialState = Map({\r\n    register: Map({\r\n        form: Map({\r\n            email: '',\r\n            username: '',\r\n            password: '',\r\n            passwordConfirm: ''\r\n        }),\r\n        exists: Map({\r\n            email: false,\r\n            password: false\r\n        })\r\n    }),\r\n    login: Map({\r\n        form: Map({\r\n            email: '',\r\n            password: ''\r\n        })\r\n    })\r\n});\r\n\r\n// reducer\r\nexport default handleActions({\r\n  [CHANGE_INPUT]: (state, action) => {\r\n    const { form, name, value } = action.payload;\r\n    return state.setIn([form, 'form', name], value);\r\n  },\r\n  [INITIALIZE_FORM]: (state, action) => {\r\n      const initialForm = initialState.get(action.payload);\r\n      return state.set(action.payload, initialForm);\r\n  },\r\n\r\n  ...pender({\r\n        type: CHECK_EMAIL_EXISTS,\r\n        onSuccess: (state, action) => state.setIn(['register', 'exists', 'email'], action.payload.data.exists)\r\n    }),\r\n    ...pender({\r\n        type: CHECK_USERNAME_EXISTS,\r\n        onSuccess: (state, action) => state.setIn(['register', 'exists', 'username'], action.payload.data.exists)\r\n    })\r\n}, initialState);","import axios from 'axios';\r\n\r\nexport const checkEmailExists = (email) => axios.get('/api/auth/exists/email/' + email);\r\nexport const checkUsernameExists = (username) => axios.get('/api/auth/exists/username/' + username);\r\n\r\nexport const localRegister = ({email, username, password}) => axios.post('/api/auth/register/local', { email, username, password });\r\nexport const localLogin = ({email, password}) => axios.post('/api/auth/login/local', { email, password });\r\n\r\nexport const checkStatus = () => axios.get('/api/auth/check');\r\nexport const logout = () => axios.post('/api/auth/logout');","// 로컬 스토리지에 JSON 형태로 저장 / 불러오기 / 삭제 헬퍼\r\nconst storage = {\r\n  set: (key, object) => {\r\n      if(!localStorage) return;\r\n      localStorage[key] = (typeof object) === 'string' ? object : JSON.stringify(object);\r\n  },\r\n  get: (key) => {\r\n      if(!localStorage) return null;\r\n\r\n      if(!localStorage[key]) {\r\n          return null;\r\n      }\r\n\r\n      try {\r\n          const parsed = JSON.parse(localStorage[key]);\r\n          return parsed;\r\n      } catch(e) {\r\n          return localStorage[key];\r\n      }\r\n  },\r\n  remove: (key) => {\r\n      if(!localStorage) return null;\r\n\r\n      if(localStorage[key]) {\r\n          localStorage.removeItem(key);\r\n      }\r\n  }\r\n};\r\n\r\nexport default storage;","// imports\r\n\r\nimport axios from 'axios';\r\nimport {isEmpty} from 'lodash';\r\nimport storage from '../../components/lib/storage';\r\n\r\n// actions\r\n\r\nconst SET_PROVIDE_USER_CHECK = \"SET_PROVIDE_USER_CHECK\";\r\nconst SET_USER_INFO = \"SET_USER_INFO\";\r\nconst LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nconst LOGOUT = \"LOGOUT\";\r\nconst GET_LOCATION_IP = \"GET_LOCATION_IP\";\r\nconst SET_CATEGORY_GROUP = \"SET_CATEGORY_GROUP\";\r\n\r\n// action creators\r\n\r\nfunction setProvideUserCheck(items) {\r\n  return {\r\n    type: SET_PROVIDE_USER_CHECK,\r\n    items\r\n  };\r\n}\r\nfunction getProvideUserCheck(params) {\r\n  return async(dispatch, getState) => {\r\n\t\tconst res = await axios.post('/api/userCheck', params);\r\n    dispatch(setProvideUserCheck(res))\r\n\t\tconsole.log('getProvideUserCheck--', res);\r\n\t\tif(isEmpty(res.data.result)) {\r\n\t\t\t// history.push(\"/sign-up\", params);\r\n\t\t}\r\n\t}\r\n}\r\nfunction setUserInfo(userInfo) {\r\n  return {\r\n    type: SET_USER_INFO,\r\n    userInfo\r\n  };\r\n}\r\nconst setIpInfo = (info) => {\r\n  return {\r\n    type: GET_LOCATION_IP,\r\n    ipInfo: info\r\n  }\r\n}\r\nconst setCaterotyGroups = (data) => {\r\n  return {\r\n    type: SET_CATEGORY_GROUP,\r\n    categoryGroups: data\r\n  }\r\n}\r\n\r\nconst getIpInfo = () => {\r\n  return async(dispatch, getState) => {\r\n    try {\r\n      const ipData = await fetch('https://geolocation-db.com/json/'); \r\n      const locationIp = await ipData.json();\r\n      dispatch(setIpInfo(locationIp)) \r\n      console.log(locationIp);\r\n      console.log(locationIp.IPv4);\r\n    }catch(e) {\r\n      console.log('getIpInfo Error:: ', e);\r\n\r\n    }\r\n  }\r\n};\r\nconst logout = () => ({\r\n  type: LOGOUT\r\n});\r\n//https://velog.io/@killi8n/Dnote-5-3.-React-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EC%9C%A0%EC%A7%80-%EB%B0%8F-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84.-hfjmep7915\r\n// API Actions\r\n\r\n// function getProvideUserCheck() {\r\n//   return (dispatch, getState) => {\r\n//     fetch(\"MOCK_DATA.json\", {\r\n//       headers : { \r\n//         'Content-Type': 'application/json',\r\n//         'Accept': 'application/json'\r\n//       }\r\n//    })\r\n//     .then(response => data)\r\n//     .then(json => dispatch(setProvideUserCheck(json)))\r\n//     .catch(err => console.log(err));\r\n//   };\r\n// }\r\n\r\n\r\n// Initial State\r\n\r\nconst initialState = {\r\n  logged: false, \r\n  isMasterUser: false,\r\n  userInfo: {},\r\n  ipInfo: {},\r\n  provideInfo: {},\r\n  categoryGroups: {}\r\n};\r\n\r\n// Reducer\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_PROVIDE_USER_CHECK:\r\n      return applySetProvideUserCheck(state, action);\r\n    case SET_USER_INFO:\r\n      return applyUserInfo(state, action);\r\n    case LOGOUT:\r\n      return userLogout(state, action);\r\n    case GET_LOCATION_IP:\r\n      return applyIpInfo(state, action);\r\n    case SET_CATEGORY_GROUP:\r\n      return applyCategoryGroups(state, action);\r\n    default:\r\n    return state;\r\n  }\r\n}\r\n\r\n// Reducer Functions\r\n\r\nfunction applySetProvideUserCheck(state, action) {\r\n  const { provideInfo } = action;\r\n  return {\r\n    ...state,\r\n    provideInfo\r\n  };\r\n}\r\nfunction applyUserInfo(state, action) {\r\n  const { userInfo } = action;\r\n  return {\r\n    ...state,\r\n    logged: true,\r\n    isMasterUser: userInfo.grade === 'MASTER',\r\n    userInfo\r\n  };\r\n}\r\nfunction applyIpInfo(state, action) {\r\n  const { ipInfo } = action;\r\n  return {\r\n    ...state,\r\n    ipInfo\r\n  };\r\n\r\n}\r\nfunction userLogout(state, action) {\r\n  storage.remove('loggedInfo');\r\n  return {\r\n    ...state,\r\n    logged: false,\r\n    isMasterUser: false,\r\n    userInfo: {}\r\n  };\r\n}\r\nfunction applyCategoryGroups(state, action) {\r\n  const { categoryGroups } = action;\r\n  return {\r\n    ...state,\r\n    categoryGroups\r\n  };\r\n\r\n}\r\n// Exports\r\n\r\nconst actionCreators = {\r\n  getProvideUserCheck,\r\n  setUserInfo,\r\n  logout,\r\n  getIpInfo,\r\n  setCaterotyGroups,\r\n};\r\n\r\nexport { actionCreators };\r\n\r\n// Export reducer by default\r\n\r\nexport default reducer;","import React, {useEffect} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as authActions from \"../../redux/modules/auth\";\r\nimport * as userActions from \"../../redux/modules/users\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport storage from \"../lib/storage\";\r\nimport {isEmpty} from 'lodash';\r\n\r\nconst NavbarExpandTop = (props) => {\r\n  console.log('NavbarExpandTop props', props);\r\n  let LogButtonText = '';\r\n  let buttonEl = <div></div>;\r\n  let signupEl = '';\r\n  const defaultImage = {\r\n    backgroundImage: `url(\"data:image/svg+xml;charset=utf8,{<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-file-person-fill' viewBox='0 0 16 16'>\r\n    <path d='M12 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm-1 7a3 3 0 1 1-6 0 3 3 0 0 1 6 0zm-3 4c2.623 0 4.146.826 5 1.755V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-1.245C3.854 11.825 5.377 11 8 11z'></path>\r\n  </svg>}\")`\r\n  }\r\n  const goLogin = () => {\r\n    props.history.push('/auth/login');\r\n  }\r\n  const goSignUp = () => {\r\n    props.history.push('/auth/sign-up');\r\n  }\r\n  const doLogout = () => {\r\n    props.logout()\r\n    props.history.push('/');\r\n  }\r\n  if(!props.logged) {\r\n    signupEl = <div>\r\n        <div className=\"dropdown-divider\"></div><a className=\"dropdown-item\" onClick={goSignUp}>Sign up</a>\r\n      </div>\r\n    LogButtonText = 'Sign in';\r\n    buttonEl = <a className=\"dropdown-item\" onClick={goLogin}>{LogButtonText}</a>\r\n  } else {\r\n    LogButtonText = 'LOGOUT';\r\n    buttonEl = <a className=\"dropdown-item\" onClick={doLogout}>{LogButtonText}</a>\r\n  }\r\n  const setUserIcon = () => {\r\n    let userIcon = '';\r\n    if(props.logged) {\r\n      if(isEmpty(props.userInfo.app_image_url)) {\r\n        userIcon = <div className=\"bi-person top-50 start-0\" style={{width: '40px', height: '40px'}}></div>\r\n      } else {\r\n        userIcon = <img src={props.userInfo.app_image_url} className=\"avatar img-fluid rounded me-1\" alt=\"\" />;\r\n      }\r\n    } else {\r\n      userIcon = <div className=\"bi-person-x top-50 start-0\" style={{width: '40px', height: '40px'}}></div>\r\n    }\r\n    return userIcon;\r\n  }\r\n  useEffect(() => {\r\n    console.log('useEffect', props.logged);\r\n\r\n\t}, [props.logged])\r\n  return (\r\n    <nav className=\"navbar navbar-expand navbar-light navbar-bg\">\r\n    <a className=\"sidebar-toggle js-sidebar-toggle\">\r\n      <i className=\"hamburger align-self-center\"></i>\r\n    </a>\r\n\r\n    <div className=\"navbar-collapse collapse\">\r\n      <ul className=\"navbar-nav navbar-align\">\r\n        {/* <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-icon dropdown-toggle\" href=\"#\" id=\"alertsDropdown\" data-bs-toggle=\"dropdown\">\r\n            <div className=\"position-relative\">\r\n              <i className=\"align-middle\" data-feather=\"bell\"></i>\r\n              <span className=\"indicator\">4</span>\r\n            </div>\r\n          </a>\r\n          <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-end py-0\" aria-labelledby=\"alertsDropdown\">\r\n            <div className=\"dropdown-menu-header\">\r\n              4 New Notifications\r\n            </div>\r\n            <div className=\"list-group\">\r\n              <a href=\"#\" className=\"list-group-item\">\r\n                <div className=\"row g-0 align-items-center\">\r\n                  <div className=\"col-2\">\r\n                    <i className=\"text-danger\" data-feather=\"alert-circle\"></i>\r\n                  </div>\r\n                  <div className=\"col-10\">\r\n                    <div className=\"text-dark\">Update completed</div>\r\n                    <div className=\"text-muted small mt-1\">Restart server 12 to complete the update.</div>\r\n                    <div className=\"text-muted small mt-1\">30m ago</div>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n              <a href=\"#\" className=\"list-group-item\">\r\n                <div className=\"row g-0 align-items-center\">\r\n                  <div className=\"col-2\">\r\n                    <i className=\"text-warning\" data-feather=\"bell\"></i>\r\n                  </div>\r\n                  <div className=\"col-10\">\r\n                    <div className=\"text-dark\">Lorem ipsum</div>\r\n                    <div className=\"text-muted small mt-1\">Aliquam ex eros, imperdiet vulputate hendrerit et.</div>\r\n                    <div className=\"text-muted small mt-1\">2h ago</div>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n              <a href=\"#\" className=\"list-group-item\">\r\n                <div className=\"row g-0 align-items-center\">\r\n                  <div className=\"col-2\">\r\n                    <i className=\"text-primary\" data-feather=\"home\"></i>\r\n                  </div>\r\n                  <div className=\"col-10\">\r\n                    <div className=\"text-dark\">Login from 192.186.1.8</div>\r\n                    <div className=\"text-muted small mt-1\">5h ago</div>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n              <a href=\"#\" className=\"list-group-item\">\r\n                <div className=\"row g-0 align-items-center\">\r\n                  <div className=\"col-2\">\r\n                    <i className=\"text-success\" data-feather=\"user-plus\"></i>\r\n                  </div>\r\n                  <div className=\"col-10\">\r\n                    <div className=\"text-dark\">New connection</div>\r\n                    <div className=\"text-muted small mt-1\">Christina accepted your request.</div>\r\n                    <div className=\"text-muted small mt-1\">14h ago</div>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n            </div>\r\n            <div className=\"dropdown-menu-footer\">\r\n              <a href=\"#\" className=\"text-muted\">Show all notifications</a>\r\n            </div>\r\n          </div>\r\n        </li> */}\r\n        {/* <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-icon dropdown-toggle\" href=\"#\" id=\"messagesDropdown\" data-bs-toggle=\"dropdown\">\r\n            <div className=\"position-relative\">\r\n              <i className=\"align-middle\" data-feather=\"message-square\"></i>\r\n            </div>\r\n          </a>\r\n          <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-end py-0\" aria-labelledby=\"messagesDropdown\">\r\n            <div className=\"dropdown-menu-header\">\r\n              <div className=\"position-relative\">\r\n                4 New Messages\r\n              </div>\r\n            </div>\r\n            <div className=\"list-group\">\r\n              <a href=\"#\" className=\"list-group-item\">\r\n                <div className=\"row g-0 align-items-center\">\r\n                  <div className=\"col-2\">\r\n                    <img src=\"img/avatars/avatar-5.jpg\" className=\"avatar img-fluid rounded-circle\" alt=\"Vanessa Tucker\" />\r\n                  </div>\r\n                  <div className=\"col-10 ps-2\">\r\n                    <div className=\"text-dark\">Vanessa Tucker</div>\r\n                    <div className=\"text-muted small mt-1\">Nam pretium turpis et arcu. Duis arcu tortor.</div>\r\n                    <div className=\"text-muted small mt-1\">15m ago</div>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n              <a href=\"#\" className=\"list-group-item\">\r\n                <div className=\"row g-0 align-items-center\">\r\n                  <div className=\"col-2\">\r\n                    <img src=\"img/avatars/avatar-2.jpg\" className=\"avatar img-fluid rounded-circle\" alt=\"William Harris\" />\r\n                  </div>\r\n                  <div className=\"col-10 ps-2\">\r\n                    <div className=\"text-dark\">William Harris</div>\r\n                    <div className=\"text-muted small mt-1\">Curabitur ligula sapien euismod vitae.</div>\r\n                    <div className=\"text-muted small mt-1\">2h ago</div>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n              <a href=\"#\" className=\"list-group-item\">\r\n                <div className=\"row g-0 align-items-center\">\r\n                  <div className=\"col-2\">\r\n                    <img src=\"img/avatars/avatar-4.jpg\" className=\"avatar img-fluid rounded-circle\" alt=\"Christina Mason\" />\r\n                  </div>\r\n                  <div className=\"col-10 ps-2\">\r\n                    <div className=\"text-dark\">Christina Mason</div>\r\n                    <div className=\"text-muted small mt-1\">Pellentesque auctor neque nec urna.</div>\r\n                    <div className=\"text-muted small mt-1\">4h ago</div>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n              <a href=\"#\" className=\"list-group-item\">\r\n                <div className=\"row g-0 align-items-center\">\r\n                  <div className=\"col-2\">\r\n                    <img src=\"img/avatars/avatar-3.jpg\" className=\"avatar img-fluid rounded-circle\" alt=\"Sharon Lessman\" />\r\n                  </div>\r\n                  <div className=\"col-10 ps-2\">\r\n                    <div className=\"text-dark\">Sharon Lessman</div>\r\n                    <div className=\"text-muted small mt-1\">Aenean tellus metus, bibendum sed, posuere ac, mattis non.</div>\r\n                    <div className=\"text-muted small mt-1\">5h ago</div>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n            </div>\r\n            <div className=\"dropdown-menu-footer\">\r\n              <a href=\"#\" className=\"text-muted\">Show all messages</a>\r\n            </div>\r\n          </div>\r\n        </li>\r\n */}\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-icon dropdown-toggle d-inline-block d-sm-none\" href=\"#\" data-bs-toggle=\"dropdown\">\r\n            <i className=\"align-middle\" data-feather=\"settings\"></i>\r\n          </a>\r\n          {/* <div>Icons made by <a href=\"https://www.flaticon.com/authors/catalin-fertu\" title=\"Catalin Fertu\">Catalin Fertu</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div> */}\r\n          <a className=\"nav-link dropdown-toggle d-none d-sm-inline-block\" href=\"#\" data-bs-toggle=\"dropdown\">\r\n            {setUserIcon()}\r\n            {/* <div className=\"bi-person top-50 start-0\" style={{width: '40px', height: '40px'}}></div>\r\n            <img src={props.userInfo.app_image_url} className=\"avatar img-fluid rounded me-1\" alt=\"\" />  */}\r\n            {/* <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-person-x\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"/>\r\n              <path fill-rule=\"evenodd\" d=\"M12.146 5.146a.5.5 0 0 1 .708 0L14 6.293l1.146-1.147a.5.5 0 0 1 .708.708L14.707 7l1.147 1.146a.5.5 0 0 1-.708.708L14 7.707l-1.146 1.147a.5.5 0 0 1-.708-.708L13.293 7l-1.147-1.146a.5.5 0 0 1 0-.708z\"/>\r\n            </svg>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-person\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"/>\r\n            </svg>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" fill=\"currentColor\" class=\"bi bi-person-circle\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"></path>\r\n              <path fill-rule=\"evenodd\" d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z\"></path>\r\n            </svg> */}\r\n            <span className=\"text-dark\" style={{fontFamily: 'STIX Two Text', fontSize: '15px'}}>{props.userInfo.username}</span>\r\n          </a>\r\n          <div className=\"dropdown-menu dropdown-menu-end\">\r\n            {/* <a className=\"dropdown-item\" href=\"pages-profile.html\"><i className=\"align-middle me-1\" data-feather=\"user\"></i> Profile</a>\r\n            <a className=\"dropdown-item\" href=\"#\"><i className=\"align-middle me-1\" data-feather=\"pie-chart\"></i> Analytics</a>\r\n            <div className=\"dropdown-divider\"></div>\r\n            <a className=\"dropdown-item\" href=\"index.html\"><i className=\"align-middle me-1\" data-feather=\"settings\"></i> Settings & Privacy</a>\r\n            <a className=\"dropdown-item\" href=\"#\"><i className=\"align-middle me-1\" data-feather=\"help-circle\"></i> Help Center</a>\r\n            <div className=\"dropdown-divider\"></div> */}\r\n            {buttonEl}\r\n            {signupEl}\r\n            {/* <a className=\"dropdown-item\" href=\"#\" onClick={props.logout}>{LogButtonText}</a> */}\r\n          </div>\r\n        </li>\r\n\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n\r\n\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n  logged: state.users.logged,\r\n  userInfo: state.users.userInfo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // checkUser: () => {\r\n    //   dispatch(authActions.checkUser());\r\n    // },\r\n    userCheck: (params) => {\r\n      dispatch(userActions.actionCreators.getProvideUserCheck(params));\r\n    },\r\n    setUserInfo: (info) => {\r\n      dispatch(userActions.actionCreators.setUserInfo(info));\r\n    },\r\n    logout: () => {\r\n      dispatch({type: 'LOGOUT'})\r\n      // dispatch(userActions.actionCreators.logout());\r\n    },\r\n    setUserTemp: ({ id, username }) => {\r\n      dispatch(authActions.setUserTemp({ id, username }));\r\n    }\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(NavbarExpandTop)\r\n);\r\n// export default NavbarExpandTop;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport moment from 'moment';\r\nimport {isEmpty} from 'lodash';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass MainContents extends Component {\r\n  constructor(props) {\r\n    console.log('MainContents props--', props);\r\n    super(props);\r\n    this.state  = {\r\n      password: '', // 첫번째 패스워드\r\n      rePassword: '', // 두번째 패스워드\r\n      pMessage:'패스워드를 입력하세요.', // 확인 메시지 (패스워드 일치여부를 사용자에게 알려주는 메시지)\r\n      show: false,\r\n      blindStyle: {\r\n        width:'100%'\r\n      },\r\n      bodyEle: '',\r\n      loading: true,\r\n      dataList: [],\r\n      groupType: '',\r\n      columns: []\r\n\r\n    };  // 초기 state값을 셋팅해준다. 빈 스트링 값은 false를 뜻한다.\r\n  this.goDetail = this.goDetail.bind(this)\r\n  }\r\n  componentDidMount() {\r\n    // if(!isEmpty(this.props.location.state) && this.props.location.state.groupType) {\r\n    //   this.setState({groupType: this.props.location.state.groupType});\r\n    // }\r\n    // this.setState({\r\n    //   groupType: this.props.groupType,\r\n    //   columns: this._getDataColumns()\r\n    // });\r\n\r\n    this._getDataList();\r\n    // this._getList();\r\n  }\r\n  // componentDidUpdate() {\r\n  //   if(this.state.groupType !== this.props.groupType) {\r\n  //     this.setState({\r\n  //       groupType: this.props.groupType,\r\n  //       columns: this._getDataColumns()\r\n  //     });\r\n  //     this._getCateroeyList();\r\n  //   }\r\n  //   console.log('componentDidUpdate--', this.props);\r\n\r\n  // }\r\n \r\n  \r\n  _getList = async() => {\r\n    const res = await axios.get('/api/posts/list');\r\n    console.log('_getList--', res)\r\n    const bodyEle = this.boardList(res.data.result);\r\n    this.setState({\r\n      bodyEle: bodyEle,\r\n      loading: false,\r\n      dataList: res.data.result\r\n      // password: '',\r\n    }) //사용자가 입력한 값이 재확인 비번과 일치하지 않을 경우\r\n  // this.setState({ hello : res.data.hello })\r\n  }\r\n  _getDataList = async() => {\r\n    try {\r\n      const res = await axios.get(`/api/posts/list-members-preview`);\r\n      console.log('_getList--', res);\r\n      let dataList = res.data.result;\r\n      if(!isEmpty(res.data.result)) {\r\n        dataList = res.data.result.map(d => {\r\n          let preContent = d.content;\r\n          preContent = preContent.replace(/(<([^>]+)>)/ig,\"\");\r\n          preContent = preContent.replace(/\\r\\n|\\n/g, '');\r\n               // var newText = d.content.replace(/(<([^>]+)>)/ig,\"\");\r\n          // console.log('newText--', newText);\r\n          if (preContent.length > 230) {\r\n            preContent = preContent.substr(0, 230).concat('...');\r\n          }\r\n          console.log('preContent---', preContent);\r\n          d.preContent = preContent;\r\n          return d;\r\n        });\r\n      }\r\n      this.setState({\r\n        loading: false,\r\n        dataList: dataList\r\n      })\r\n    } catch(e) {\r\n      console.log('_getList error--', e);\r\n      // this._getDataList();\r\n    }\r\n  }\r\n \r\n  boardList(list) {\r\n    try{\r\n      const listItems = list.map((item, index) =>\r\n      <tr key={index}>\r\n        <td>{item.name}</td>\r\n        {/* <Nav.Link href={`${this.props.pathInfo.url}/detail#${item.id}`}>\r\n          <td>{item.subject}</td>\r\n        </Nav.Link> */}\r\n        <Link to={{pathname: `${this.props.pathInfo.url}/detail`, search: `?id=${item.id}&groupType=${this.props.location.state.groupType}`, state: {groupType: this.props.location.state.groupType}}}\r\n        className=\"nav-link text-dark\">\r\n          <td>{item.subject}</td>\r\n        </Link>\r\n        <td>{this.dateTimeFormat(item.created_at)}</td>\r\n      </tr>\r\n      );\r\n      return (\r\n        <tbody>{listItems}</tbody>\r\n      );\r\n\r\n    } catch(e) {\r\n      console.log('boardList err', e);\r\n    }\r\n  } \r\n  dateTimeFormat(date) {\r\n    return moment(date).format('YYYY.MM.DD');\r\n  }\r\n  goDetail = (data) => {\r\n    if(this.props) {\r\n      this.props.props.props.history.push({pathname:`/posts/detail`, search: `?id=${data.id}&groupType=${data.group_type}`});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{padding: '30px'}}>\r\n       <Row xs={2} md={3} className=\"g-1\">\r\n         {this.state.dataList.map((data,index) =>\r\n              <Col key={index}>\r\n              <Card style={{minHeight:'250px', fontFamily: 'GothicL'}}>\r\n                <Card.Header>\r\n                  <Card.Title>{data.subject}</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                  <div style={{textOverflow: 'ellipsis'}} dangerouslySetInnerHTML={ {__html: data.preContent} }></div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n                <div style={{padding: '10px'}}>\r\n                <button type=\"button\" className=\"btn btn-outline-secondary btn-sm btn-br mr-10\">\r\n                  <Link to={{pathname:`/posts/detail`, search: `?id=${data.id}&groupType=${data.group_type}`, state: {groupType: data.group_type}}} className=\"btn-text-s\">read more</Link>\r\n                </button>\r\n                </div>\r\n              </Card>\r\n            </Col>\r\n         )\r\n\r\n         }\r\n          {/* {Array.from({ length: 12 }).map((_, idx) => (\r\n            <Col>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Title>Card title</Card.Title>\r\n                  <Card.Text>\r\n                    This is a longer card with supporting text below as a natural\r\n                    lead-in to additional content. This content is a little bit longer.\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))} */}\r\n        </Row>\r\n              \r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MainContents;","import React from 'react';\r\nimport MainContents from '../components/contents/MainContents';\r\n\r\nconst Main = (props) => {\r\n  return (\r\n    <MainContents props={props} />\r\n  )\r\n}\r\n\r\nexport default Main;","import React, {useState} from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nrequire('dotenv').config();\r\n\r\nconst clientId = process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID;\r\n\r\nconst GoogleLoginBtn = ({ location, history, onGoogleLogin }) =>{\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const onSuccess = async(response) => {\r\n      const { googleId, profileObj : { email, name, imageUrl } } = response;\r\n      console.log('onSuccess ::', response);\r\n      setIsLoggedIn(true)\r\n      console.log('email---', email)\r\n      await onGoogleLogin (\r\n        // 구글 로그인 성공시 서버에 전달할 데이터\r\n        {appId: googleId, email, name, imageUrl, provider: 'GOOGLE'}\r\n      );\r\n  }\r\n\r\n  const onFailure = (error) => {\r\n      console.log(error);\r\n  }\r\n\r\n  return(\r\n      <div className=\"d-inline-block\">\r\n          <GoogleLogin\r\n            clientId={clientId}\r\n            render={renderProps => (\r\n              <button type=\"button\" className=\"btn btn-md\" onClick={renderProps.onClick} disabled={renderProps.disabled}>\r\n                <div className=\"google-icon\" style={{width: '30px', height: '30px'}}></div>\r\n              </button>\r\n            )}\r\n            responseType={\"id_token\"}\r\n            onSuccess={onSuccess}\r\n            onFailure={onFailure}\r\n            // isSignedIn={isLoggedIn}\r\n            cookiePolicy={'single_host_origin'}\r\n          />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default GoogleLoginBtn;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\n\r\n// 두개가 함께 있을땐 상단 (그 사이) 에 여백을 준다\r\nconst Wrapper = styled.div`\r\n    & + & {\r\n        margin-top: 1rem;\r\n    }\r\n`;\r\n\r\nconst Label = styled.div`\r\n    font-size: 1rem;\r\n    color: ${oc.gray[6]};\r\n    margin-bottom: 0.25rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    border: 1px solid ${oc.gray[3]};\r\n    outline: none;\r\n    border-radius: 0px;\r\n    line-height: 2.5rem;\r\n    font-size: 1.2rem;\r\n    padding-left: 0.5rem;\r\n    padding-right: 0.5rem;\r\n`;\r\n\r\n// rest 쪽에는 onChange, type, name, value, placeholder 등의 input 에서 사용 하는 값들을 넣어줄수 있다.\r\nconst InputWithLabel = ({label, ...rest}) => (\r\n    <Wrapper>\r\n        <Label>{label}</Label>\r\n        <Input {...rest}/>\r\n    </Wrapper>\r\n);\r\n\r\nexport default InputWithLabel;","import React, {useReducer, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport GoogleLoginBtn from '../components/login/GoogleLoginBtn';\r\nimport {isEmpty} from 'lodash';\r\nimport InputWithLabel from '../components/auth/InputWithLabel';\r\nimport * as authActions from '../redux/modules/auth';\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport storage from '../components/lib/storage';\r\n\r\nconst SignIn = ({location, history}) => {\r\n  console.log('history', history);\r\n  console.log('location', location);\r\n\tconsole.log('SignIn storage.get', storage.get('loggedInfo'))\r\n\tconst SET_PROVIDE_USER_CHECK = \"SET_PROVIDE_USER_CHECK\";\r\n\tconst initialState = {};\r\n\tconst goMainPage = () => {\r\n\t\thistory.push(\"/\");\r\n\t}//\r\n\t// useEffect(() => {\r\n\t// \tauthActions.initializeForm('login')\r\n\t// }, [])\r\n\tfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_PROVIDE_USER_CHECK:\r\n        return applySetProvideUserCheck(state, action);\r\n      default:\r\n        return applySetProvideUserCheck(state, action);\r\n        // return state;\r\n    }\r\n  }\r\n  \r\n  // Reducer Functions\r\n  \r\n  function applySetProvideUserCheck(state, action) {\r\n\t\tconsole.log(action);\r\n\t\tconsole.log(state);\r\n    const { user } = action;\r\n    return {\r\n      ...state,\r\n      user\r\n    };\r\n  }\r\n\tconst [state, dispatch] = useReducer(reducer, {});\r\n  console.log('Sign in state', state);\r\n\tconst provideUserCheck = async(params) => {\r\n\t\tconst res = await axios.post('/api/userCheck', params);\r\n\t\tconsole.log('res--', res);\r\n\t\tif(isEmpty(res.data.result)) {\r\n\t\t\thistory.push(\"/sign-up\", params);\r\n\t\t} else {\r\n\t\t\tdispatch({type: SET_PROVIDE_USER_CHECK, user: res.data.result[0]})\r\n\t\t\tstorage.set('loggedInfo', state.user);\r\n\t\t\tconsole.log('dispatch--', state);\r\n\t\t\tconsole.log('storage.get', storage.get('loggedInfo'))\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleChange = (e) => {\r\n\t\t// const { AuthActions } = this.props;\r\n\t\tconst { name, value } = e.target;\r\n\r\n\t\tauthActions.changeInput({\r\n\t\t\t\tname,\r\n\t\t\t\tvalue,\r\n\t\t\t\tform: 'login'\r\n\t\t});\r\n\t}\r\n\tconst { email, password } = this.props.form.toJS();\r\n\t// const { handleChange } = this;\r\n  return (\r\n    <main className=\"d-flex w-100\">\r\n\t\t<div className=\"container d-flex flex-column\">\r\n\t\t\t<div className=\"row vh-100\">\r\n\t\t\t\t<div className=\"col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100\">\r\n\t\t\t\t\t<div className=\"d-table-cell align-middle\">\r\n\r\n\t\t\t\t\t\t<div className=\"text-center mt-4\">\r\n\t\t\t\t\t\t\t<h1 className=\"h2\">Welcome back, Charles</h1>\r\n\t\t\t\t\t\t\t<p className=\"lead\">\r\n\t\t\t\t\t\t\t\tSign in to your account to continue\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"m-sm-4\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"img/avatars/avatar.jpg\" alt=\"Charles Hall\" className=\"img-fluid rounded-circle\" width=\"132\" height=\"132\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t<InputWithLabel label=\"이메일\" name=\"email\" value={email} onChange={handleChange} placeholder=\"이메일\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <label className=\"form-label\">Email</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input className=\"form-control form-control-lg\" type=\"email\" name=\"email\" placeholder=\"Enter your email\" /> */}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"form-label\">Password</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input className=\"form-control form-control-lg\" type=\"password\" name=\"password\" placeholder=\"Enter your password\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<small>\r\n            <a href=\"index.html\">Forgot password?</a>\r\n          </small>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"remember-me\" name=\"remember-me\" checked />\r\n            <span className=\"form-check-label\">\r\n              Remember me next time\r\n            </span>\r\n          </label>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-lg btn-primary\">Sign in</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<GoogleLoginBtn onGoogleLogin={provideUserCheck} history={history} location={location} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</main>\r\n  )\r\n}\r\nexport default connect(\r\n\t// (state) => ({\r\n\t// \t\tform: state.auth.getIn(['login', 'form'])\r\n\t// }),\r\n\t(dispatch) => ({\r\n\t\t\tAuthActions: bindActionCreators(authActions, dispatch)\r\n\t})\r\n)(SignIn);\r\n// export default SignIn;","import React, {Component} from \"react\";\r\n// import axios from \"axios\";\r\n\r\nclass IpAddress extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            ip: \"\",\r\n            locationInfo: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getIpInfo();\r\n    };\r\n\r\n    getIpInfo = async() => {\r\n      const ipData = await fetch('https://geolocation-db.com/json/'); \r\n      const locationIp = await ipData.json(); \r\n      console.log(locationIp);\r\n      console.log(locationIp.IPv4);\r\n    };\r\n    \r\n    render = () => {\r\n      return (\r\n        <div></div>\r\n      );\r\n        // let self = this;\r\n        // if (self.state.loading) {\r\n        //     return (\r\n        //         <div className=\"App\">\r\n        //             <h1>Loading IP Address</h1>\r\n        //         </div>\r\n        //     );\r\n        // } else {\r\n        //     return (\r\n        //         <div className=\"App\">\r\n        //             <h1>IP: {self.state.ip}, {self.state.country} </h1>\r\n        //         </div>\r\n        //     );\r\n        // }\r\n\r\n    };\r\n}\r\n\r\nexport default IpAddress;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport GoogleLoginBtn from '../components/login/GoogleLoginBtn';\r\nimport {isEmail, isLength} from 'validator';\r\nimport {isEmpty} from 'lodash';\r\nimport IpAddress from '../components/lib/ip/IpAddress';\r\nimport {mapStateToProps, mapDispatchToProps} from '../redux/connectMapProps';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst crypto = require('crypto');\r\nrequire('dotenv').config();\r\nconst solt = process.env.REACT_APP_HIDDEN_KEY;\r\n\r\nconst SignUp = (props) => {\r\n  console.log('props.', props);\r\n  // const [name, setName] = useState('');\r\n\t// const [password, setPassword] = useState('')\r\n  // const [email, setEmail] = useState('');\r\n  const [appId, setAppId] = useState('');\r\n\tconst [provider, setProvider] = useState('');\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n\t//state관리\r\n\tconst [inputs, setInputs] = useState({\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t});\r\n\tconst [validations, setValidations] = useState({\r\n\t\tnameMessage: '',\r\n\t\temailMessage: '',\r\n\t\tpasswordMessage: '',\r\n\t\tnameInvalid: false,\r\n\t\temailInvalid: false,\r\n\t\tpasswordInvalid: false\r\n\t});\r\n\tconst {nameInvalid, nameMessage, emailMessage, passwordMessage, emailInvalid, passwordInvalid} = validations;\r\n\r\n\t//비구조화할당을 통해 값을 추출\r\n\tconst { name, email, password } = inputs;\r\n\tconst inputValidation = () => {\r\n\t\tlet emailMessage = '';\r\n\t\tlet passwordMessage = '';\r\n\t\tlet nameMessage = '';\r\n\t\tlet nameInvalid = false;\r\n\t\tlet emailInvalid = false;\r\n\t\tlet passwordInvalid = false;\r\n\t\tlet flag = true;\r\n\t\tif(isEmpty(name)) {\r\n\t\t\tnameMessage = '이름을 입력하세요.'\r\n\t\t\tnameInvalid = true\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\tif(!isEmail(email)) {\r\n\t\t\temailMessage = '잘못된 이메일 형식 입니다.';\r\n\t\t\temailInvalid = true\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\tif(!isLength(password, { min: 6 })) {\r\n\t\t\tpasswordMessage = '비밀번호를 6자 이상 입력하세요.';\r\n\t\t\tpasswordInvalid = true\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\tsetValidations({\r\n\t\t\tnameMessage: nameMessage,\r\n\t\t\temailMessage: emailMessage,\r\n\t\t\tpasswordMessage: passwordMessage,\r\n\t\t\tnameInvalid: nameInvalid,\r\n\t\t\temailInvalid: emailInvalid,\r\n\t\t\tpasswordInvalid: passwordInvalid\r\n\t\t});\r\n\t\treturn flag;\r\n\t}\r\n\r\n\t//값이 변경되는 함수 - 타겟대상이 2개임을 처리\r\n\tconst onDateChange = (e) => {\r\n\t\t\tconst { value, name } = e.target;\r\n\t\t\tsetInputs({\r\n\t\t\t\t\t...inputs, //기존 input 객체를 복사 - 나머지 패턴\r\n\t\t\t\t\t[name]: value\r\n\t\t\t});\r\n\t\t\tlet emailMessage = '';\r\n\t\t\tlet passwordMessage = '';\r\n\t\t\tlet nameMessage = '';\r\n\t\t\tlet nameInvalid = false;\r\n\t\t\tlet emailInvalid = false;\r\n\t\t\tlet passwordInvalid = false;\r\n\t\t\tif(name === 'name') {\r\n\t\t\t\tif(isEmpty(value)) {\r\n\t\t\t\t\tnameMessage = '이름을 입력하세요.'\r\n\t\t\t\t\tnameInvalid = true\r\n\t\t\t\t}\r\n\t\t\t\tsetValidations({\r\n\t\t\t\t\t...validations,\r\n\t\t\t\t\tnameMessage: nameMessage,\r\n\t\t\t\t\tnameInvalid: nameInvalid,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif(name === 'password') {\r\n\t\t\t\tif(!isLength(value, { min: 6 })) {\r\n\t\t\t\t\tpasswordMessage = '비밀번호를 6자 이상 입력하세요.';\r\n\t\t\t\t\tpasswordInvalid = true\r\n\t\t\t\t}\r\n\t\t\t\tsetValidations({\r\n\t\t\t\t\t...validations,\r\n\t\t\t\t\tpasswordMessage: passwordMessage,\r\n\t\t\t\t\tpasswordInvalid: passwordInvalid,\r\n\t\t\t\t});\r\n\t\r\n\t\t\t}\r\n\t\t\tif(name === 'email') {\r\n\t\t\t\tif(!isEmail(value)) {\r\n\t\t\t\t\temailMessage = '잘못된 이메일 형식 입니다.';\r\n\t\t\t\t\temailInvalid = true\r\n\t\t\t\t}\r\n\t\t\t\tsetValidations({\r\n\t\t\t\t\t...validations,\r\n\t\t\t\t\temailMessage: emailMessage,\r\n\t\t\t\t\temailInvalid: emailInvalid,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t}\r\n\r\n\r\n\t//값을 초기화시키는 함수\r\n\tconst onDataReset = () => {\r\n\t\t\tsetInputs({\r\n\t\t\t\t\tname: '',\r\n\t\t\t\t\temail: '',\r\n\t\t\t\t\tpassword: ''\r\n\t\t\t});\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tif (props.location.state) {\r\n\t\t\tsetContents(props.location.state);\r\n\t\t}\r\n\t},[props.location.state]);\r\n\tconst setContents = (params) => {\r\n\t\tif(params) {\r\n\t\t\tsetInputs({\r\n\t\t\t\tname: params.name,\r\n\t\t\t\temail: params.email,\r\n\t\t\t\tpassword: ''\r\n\t\t\t});\r\n\t\t\tsetValidations({\r\n\t\t\t\tnameMessage: '',\r\n\t\t\t\temailMessage: '',\r\n\t\t\t\tpasswordMessage: '',\r\n\t\t\t\tnameInvalid: false,\r\n\t\t\t\temailInvalid: false,\r\n\t\t\t\tpasswordInvalid: false\r\n\t\t\t});\r\n\t\t\t// setName(params.name);\r\n\t\t\t// setEmail(params.email);\r\n\t\t\tsetAppId(params.appId);\r\n\t\t\tsetProvider(params.provider)\r\n\t\t\tsetIsDisabled('disabled');\r\n\t\r\n\t\t}\r\n\t}\r\n\tconst onSignUp = async () => {\r\n\t\ttry {\r\n\t\t\tif(!inputValidation()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst res = await axios.post('/api/userEmailCheck', {email: email});\r\n\t\t\tconsole.log('res--', res);\r\n\t\t\tif(isEmpty(res.data.result)) {\r\n\t\t\t\tdoSignUp();\r\n\t\t\t} else {\r\n\t\t\t\tsetValidations({\r\n\t\t\t\t\t...validations,\r\n\t\t\t\t\temailMessage: '이미 가입되어 있는 이메일입니다.',\r\n\t\t\t\t\temailInvalid: true,\r\n\t\t\t\t});     \r\n\t\t\t}\r\n\t\t} catch(error) {\r\n\t\t\tconsole.log('error ::', error);\r\n\r\n\t\t}\r\n\t}\t\r\n\tconst doSignUp = async()=> {\r\n\t\ttry {\r\n      const cipher = crypto.createCipher('aes192', solt);\r\n      cipher.update(inputs.password, 'utf8', 'base64');\r\n      const outPass = cipher.final('base64');\r\n\t\t\tconst reqParams = {name, password: outPass, email, appId, provider, ip:props.ipInfo.IPv4}\r\n\t\t\tconst res = await axios.post('/api/signup', reqParams);\r\n\t\t\ttoast.success('가입에 성공하였습니다. 로그인을 해주세요.')\r\n\t\t\tprops.history.push(\"/auth/login\");\r\n\t\t\tconsole.log('onSignUp success!', res);\r\n\t\t} catch(e) {\r\n\t\t\ttoast.error('가입에 실패하였습니다.')\r\n\t\t}\r\n\t}\r\n\tconst ButtonElements = () => {\r\n\t\tlet elements = null;\r\n\t\tif(!isDisabled) {\r\n\t\t\telements = <GoogleLoginBtn onGoogleLogin={setContents} />;\r\n\t\t}\r\n\t\treturn elements;\r\n\t}\r\n\tconst handleChangedPassword = (e) => {\r\n\t\tif(!isLength(e.target.value, { min: 6 })) {\r\n\t\t\tthis.setError('비밀번호를 6자 이상 입력하세요.');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.setError(null);\r\n\t\treturn true;\r\n\t\t// setPassword(e.target.value);\r\n\t\t// console.log('handleChangedPassword!', e.target.value);\r\n\t\t// console.log('handleChangedPassword', password);\r\n\t}\r\n  return (\r\n    <main className=\"d-flex w-100\">\r\n\t\t<div className=\"container d-flex flex-column\">\r\n\t\t\t<div className=\"row vh-100\">\r\n\t\t\t\t<div className=\"col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100\">\r\n\t\t\t\t\t<div className=\"d-table-cell align-middle\">\r\n\t\t\t\t\t\t<IpAddress />\r\n\t\t\t\t\t\t<div className=\"text-center mt-4\">\r\n\t\t\t\t\t\t\t<h1 className=\"h2\">가입</h1>\r\n\t\t\t\t\t\t\t<p className=\"lead\">\r\n\t\t\t\t\t\t\t\t{/* Start creating the best possible user experience for you customers. */}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"m-sm-4\">\r\n\t\t\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"form-label\">Name</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input className={'form-control form-control-lg' + (nameInvalid ? ' is-invalid' : '')}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onDateChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"invalid-message\">{nameMessage}</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"form-label\">Email</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input className={'form-control form-control-lg' + (emailInvalid ? ' is-invalid' : '')}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"email\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={email} \r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onDateChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"invalid-message\">{emailMessage}</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"form-label\">Password</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input className={'form-control form-control-lg' + (passwordInvalid ? ' is-invalid' : '')}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter password\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n            \t\t\t\t\t\tonChange={onDateChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"invalid-message\">{passwordMessage}</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <a href=\"index.html\" className=\"btn btn-lg btn-primary\">Sign up</a> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-lg btn-primary\" onClick={onSignUp}>Sign up</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<ButtonElements />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</main>\r\n\r\n  )\r\n}\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(SignUp)\r\n);\r\n\r\n// export default SignUp;","import * as authActions from \"./modules/auth\";\r\nimport * as userActions from \"./modules/users\";\r\n\r\nconst mapStateToProps = state => ({\r\n  logged: state.users.logged,\r\n  userInfo: state.users.userInfo,\r\n  ipInfo: state.users.ipInfo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // checkUser: () => {\r\n    //   dispatch(authActions.checkUser());\r\n    // },\r\n    userCheck: (params) => {\r\n      dispatch(userActions.actionCreators.getProvideUserCheck(params));\r\n    },\r\n    setUserInfo: (info) => {\r\n      dispatch(userActions.actionCreators.setUserInfo(info));\r\n    },\r\n    getIpInfo: (info) => {\r\n      dispatch(userActions.actionCreators.getIpInfo(info));\r\n    },\r\n    setUserTemp: ({ id, username }) => {\r\n      dispatch(authActions.setUserTemp({ id, username }));\r\n    }\r\n  };\r\n};\r\nexport {mapStateToProps, mapDispatchToProps};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {isEmpty} from 'lodash';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ImageList from '@material-ui/core/ImageList';\r\nimport ImageListItem from '@material-ui/core/ImageListItem';\r\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n    // width: 500,\r\n    height: 450,\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n}));\r\n\r\nclass ThumbnailList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      imageList: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      imageList: this.props.dataList\r\n    })\r\n  }\r\n  // componentWillUnmount() { \r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <CardImageList imageList={this.state.imageList} /> */}\r\n        <ImageItemList imageList={this.state.imageList} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction getPreText(item) {\r\n  let contentText = item.content;\r\n  contentText = contentText.replace(/<IMG(.*?)>/gi, '');\r\n  contentText = contentText.replace(/(<([^>]+)>)/ig,\"\");\r\n  contentText = contentText.replace(/\\r\\n|\\n/g, '');\r\n  return contentText;\r\n}\r\n\r\nconst CardImageList = (props) => {\r\n  return (\r\n    <Row xs={2} md={6} className=\"g-3\">\r\n      {props.imageList.map((data,index) =>\r\n         <Col key={index}>\r\n         <Card style={{width:'100%'}}>\r\n           <Card.Header style={{fontFamily: 'GothicB'}}>\r\n             <h5>{data.subject}</h5>\r\n           </Card.Header>\r\n           <Link to={{pathname:`/posts/detail`, search: `?id=${data.id}&groupType=${data.group_type}`}} className=\"btn-text-s\">\r\n             <img src={data.image} className=\"card-img\" alt=\"\" style={{maxHeight: ''}} />\r\n           </Link>\r\n           <Card.Body>\r\n             <Card.Text className=\"card-short-text\">\r\n               {getPreText(data)}\r\n             </Card.Text>\r\n           </Card.Body>\r\n           \r\n         </Card>\r\n       </Col>\r\n    )}\r\n   </Row>\r\n  )\r\n\r\n}\r\nconst ImageItemList = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    // <div className={classes.root}>\r\n    <Row xs={2} md={6} className=\"g-3\">\r\n      {props.imageList.map((data,index) =>\r\n         <Col key={index}>\r\n          <ImageListItem key={data.image} style={{height: '180px', listStyle: 'none'}}>\r\n            <Link to={{pathname:`/posts/detail`, search: `?id=${data.id}&groupType=${data.group_type}`}} className=\"btn-text-s\">\r\n              <img src={data.image} className=\"card-img\" alt={data.subject} style={{maxHeight: ''}} />\r\n           </Link>\r\n            {/* <img src={data.image} className=\"card-img\" alt={data.subject} /> */}\r\n            <ImageListItemBar\r\n              title={data.subject}\r\n              subtitle={<span>by: {data.name}</span>}\r\n              actionIcon={\r\n                <IconButton aria-label={`info about ${data.subject}`} className={classes.icon}>\r\n                  <InfoIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </ImageListItem>\r\n\r\n       </Col>\r\n    )}\r\n   </Row>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default ThumbnailList;","import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport * as _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    // marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst CategorySeletctList = (props) => {\r\n  console.log('CategorySeletctList--', props);\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    depth1: '',\r\n    depth2: '',\r\n    depth1List: [],\r\n    depth2List: [],\r\n  });\r\n  useEffect(() => {\r\n    if(_.isEmpty(props.categoryGroups)) {\r\n      return;\r\n    }\r\n    let targetCode = props.groupType;\r\n    let depth2 = '';\r\n    if(!_.isEmpty(props.location.state)) {\r\n      targetCode = props.location.state;\r\n      depth2 = props.groupType;\r\n    }\r\n    let findCode = targetCode;\r\n    if(targetCode instanceof Object ) {\r\n      findCode = depth2\r\n    }\r\n    let targetCategory = props.categoryGroups.category.find(d => d.node_code === findCode);\r\n    if(_.isEmpty(targetCategory)) {\r\n      props.categoryGroups.category.forEach(item => {\r\n        item.sub.forEach(d => {\r\n          if(d.node_code === findCode) {\r\n            targetCategory = item;\r\n          }\r\n        })\r\n      })\r\n    }\r\n    if(_.isEmpty(targetCategory)) {\r\n      return;\r\n    }\r\n    setState({\r\n      ...state,\r\n      depth1List: props.categoryGroups.category,\r\n      depth1: targetCategory.node_code,\r\n      depth2List: targetCategory.sub,\r\n      depth2\r\n    });\r\n\r\n\t}, [props.groupType])\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const targetCategory = props.categoryGroups.category.find(d => d.node_code === event.target.value);\r\n    let sub = state.depth2List;\r\n    if(name === 'depth1') {\r\n      sub = targetCategory.sub;\r\n    }\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n      depth2List: sub\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{width: '50%', float: 'left'}}>\r\n      \r\n      <FormControl className={classes.formControl} disabled={props.isDisabled}>\r\n        <NativeSelect\r\n          value={state.depth1}\r\n          onChange={handleChange}\r\n          name=\"depth1\"\r\n          className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'depth1' }}\r\n        >\r\n          {state.depth1List.map((item, index) => \r\n            <option key={index} value={item.node_code}>{item.node_nm}</option>\r\n          )}\r\n         \r\n        </NativeSelect>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl} disabled={props.isDisabled}>\r\n        <NativeSelect\r\n          value={state.depth2}\r\n          onChange={handleChange}\r\n          name=\"depth2\"\r\n          className={classes.selectEmpty}\r\n          inputProps={{ 'aria-label': 'depth2' }}\r\n        >\r\n          {state.depth2List.map((item, index) => \r\n            <option key={index} value={item.node_code}>{item.node_nm}</option>\r\n          )}\r\n        </NativeSelect>\r\n      </FormControl>\r\n     \r\n    </div>\r\n  );\r\n}\r\nexport default CategorySeletctList;","import react, {useEffect, useState} from 'react';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DataTable from \"react-data-table-component\";\r\nimport {isEmpty} from 'lodash';\r\n\r\nconst DataTableComponent = (props) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [selectedRowItem, setSelectedRowItem] = useState(null);\r\n  const sortIcon = <ArrowDownward />;\r\n  const progress = <CircularProgress size={70}/>;\r\n  const customStyles = () => {\r\n    return {\r\n      rows: {\r\n        style: {\r\n          minHeight: '35px', // override the row height\r\n        }\r\n      },\r\n      headCells: {\r\n        style: {\r\n          minHeight: '40px', // override the row height\r\n          paddingLeft: '8px', // override the cell padding for head cells\r\n          paddingRight: '8px',\r\n          fontSize: '13px',\r\n          fontWeight: 'bold',\r\n          lineHeight: '30px'\r\n        },\r\n      },\r\n      cells: {\r\n        style: {\r\n          paddingLeft: '3px', // override the cell padding for data cells\r\n          paddingRight: '3px',\r\n        },\r\n      },\r\n    };\r\n  }\r\n  // const darkTheme = () => {\r\n  //   return {\r\n  //     title: {\r\n  //       fontSize: '22px',\r\n  //       fontColor: '#FFFFFF',\r\n  //       backgroundColor: '#363640',\r\n  //     },\r\n  //     contextMenu: {\r\n  //       backgroundColor: '#E91E63',\r\n  //       fontColor: '#FFFFFF',\r\n  //     },\r\n  //     header: {\r\n  //       fontSize: '12px',\r\n  //       fontColor: '#FFFFFF',\r\n  //       backgroundColor: '#363640',\r\n  //     },\r\n  //     rows: {\r\n  //       fontColor: '#FFFFFF',\r\n  //       backgroundColor: '#363640',\r\n  //       borderColor: 'rgba(255, 255, 255, .12)',\r\n  //       hoverFontColor: 'black',\r\n  //       hoverBackgroundColor: 'rgba(0, 0, 0, .24)',\r\n  //     },\r\n  //     cells: {\r\n  //       cellPadding: '5px',\r\n  //     },\r\n  //   }\r\n  // }\r\n  useEffect(() => {\r\n    setIsLoading(props.isLoading);\r\n  });\r\n  useEffect(() => {\r\n    setDataList(props.dataList);\r\n  });\r\n  const selectedRowChange = (d) => {\r\n    // if(d)\r\n    setSelectedRowItem(d.selectedRows[0]);\r\n    if(props.hasOwnProperty('onSelectedChagenItemCB')) {\r\n      props.onSelectedChagenItemCB(d.selectedRows[0]);\r\n    }\r\n    console.log('selectedRowChange---', d);\r\n  }\r\n  return (\r\n    <div>\r\n    <DataTable\r\n      columns={props.columns}\r\n      data={dataList}\r\n      noHeader={true}\r\n      responsive={true}\r\n      sortIcon={sortIcon}\r\n      progressComponent={progress}\r\n      // customTheme={this.darkTheme()}\r\n      customStyles={customStyles()}\r\n      defaultSortAsc={false}\r\n      pagination\r\n      paginationPerPage={15}\r\n      highlightOnHover\r\n      noDataComponent=\"등록된 글이 없습니다.\"\r\n      progressPending={isLoading}\r\n      selectableRows={props.isSelectable}\r\n      onSelectedRowsChange={selectedRowChange}\r\n    />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTableComponent;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {isEmpty} from 'lodash';\r\nimport ThumbnailList from './ThumbnailList';\r\nimport CategorySeletctList from './CategorySeletctList';\r\nimport DataTableComponent from '../lib/dataDisplay/DataTableCompoenet';\r\nclass PostList extends Component {\r\n  constructor(props) {\r\n    console.log('props--', props);\r\n    super(props);\r\n    this.state  = {\r\n      password: '', // 첫번째 패스워드\r\n      rePassword: '', // 두번째 패스워드\r\n      pMessage:'패스워드를 입력하세요.', // 확인 메시지 (패스워드 일치여부를 사용자에게 알려주는 메시지)\r\n      show: false,\r\n      blindStyle: {\r\n        width:'100%'\r\n      },\r\n      bodyEle: '',\r\n      loading: true,\r\n      dataList: [],\r\n      groupType: '',\r\n      columns: [],\r\n      writeButton: '',\r\n      isLoading: true,\r\n      contentEl: '',\r\n\r\n    };  // 초기 state값을 셋팅해준다. 빈 스트링 값은 false를 뜻한다.\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      groupType: this.props.groupType,\r\n      columns: this._getDataColumns()\r\n    });\r\n\r\n    this._getCateroeyList();\r\n    this._setWriteButton();\r\n    // this._getList();\r\n  }\r\n  componentDidUpdate() {\r\n    if(this.state.groupType !== this.props.groupType) {\r\n      this.setState({\r\n        groupType: this.props.groupType,\r\n      });\r\n      this._setWriteButton();\r\n      this._getCateroeyList();\r\n    }\r\n    console.log('componentDidUpdate--', this.props);\r\n\r\n  }\r\n  _setWriteButton() {\r\n    if(isEmpty(this.props.userInfo)) {\r\n      return;\r\n    }\r\n    let btnEl = ''\r\n    if (this.props.groupType !== 'GUEST' && this.props.userInfo.grade === 'MASTER') {\r\n      btnEl =  <button type=\"button\" className=\"btn btn-dark btn-sm btn-fr mt-20\">\r\n              <Link to={{pathname:`${this.props.pathInfo.url}/detail`, search: `?groupType=${this.props.groupType}`, state: this.props.location.state, hash:'#write'}} className=\"text-white\" style={{textDecoration: 'none'}}>글쓰기</Link>\r\n              {/* <Link to={`${this.props.pathInfo.url}?groupType=${this.props.groupType}#write`} className=\"text-white\" style={{textDecoration: 'none'}}>글쓰기</Link> */}\r\n              </button>\r\n    } else if (this.props.groupType === 'GUEST') {\r\n      btnEl =  <button type=\"button\" className=\"btn btn-dark btn-sm btn-fr mt-20\">\r\n              <Link to={{pathname:`${this.props.pathInfo.url}/detail`, search: `?groupType=${this.props.groupType}`, state: this.props.location.state, hash:'#write'}} className=\"text-white\" style={{textDecoration: 'none'}}>글쓰기</Link>\r\n              </button>\r\n    }\r\n    this.setState({\r\n      writeButton: btnEl,\r\n    })\r\n  }\r\n  _getDataColumns() {\r\n    return [\r\n      {\r\n        name: \"작성자\",\r\n        selector: row => `${row.name}`,\r\n        sortable: true,\r\n        grow: 1,\r\n      },\r\n      {\r\n        name: \"글 제목\",\r\n        selector: row => row.subject,\r\n        sortable: true,\r\n        compact: false,\r\n        grow: 8,\r\n        cell: d => <Link to={{pathname:`${this.props.pathInfo.url}/detail`, search: `?id=${d.id}&groupType=${this.props.groupType}`, state: this.props.location.state}} className=\"nav-link text-dark\">\r\n        <td>{d.subject}</td>\r\n      </Link>\r\n      },\r\n      {\r\n        name: \"작성일\",\r\n        selector: row => row.created_at,\r\n        sortable: true,\r\n        right: false,\r\n        grow: 1,\r\n        format: d => moment(d.created_at).format('YYYY.MM.DD'),\r\n        // cell: d => <span>{moment(d.created_at).format('YYYY.MM.DD')}</span>,\r\n      }\r\n    ]\r\n  }\r\n  \r\n  _getList = async() => {\r\n    const res = await axios.get('/api/posts/list');\r\n    console.log('_getList--', res)\r\n    const bodyEle = this.boardList(res.data.result);\r\n    this.setState({\r\n      bodyEle: bodyEle,\r\n      loading: false,\r\n      dataList: res.data.result,\r\n      // password: '',\r\n    }) //사용자가 입력한 값이 재확인 비번과 일치하지 않을 경우\r\n  // this.setState({ hello : res.data.hello })\r\n  }\r\n  _getCateroeyList = async() => {\r\n    const res = await axios.get(`/api/posts/category-list?groupType=${this.props.groupType}`);\r\n    console.log('_getList--', res)\r\n    // const bodyEle = this.boardList(res.data.result);\r\n    this.setState({\r\n      // bodyEle: bodyEle,\r\n      loading: false,\r\n      dataList: res.data.result,\r\n      isLoading: false,\r\n      // password: '',\r\n    }) //사용자가 입력한 값이 재확인 비번과 일치하지 않을 경우\r\n    this._setContents();\r\n  } \r\n  _setContents() {\r\n    let contentEl;\r\n    if(this.props.groupType === 'GALLERY') {\r\n      contentEl = <ThumbnailList dataList={this.state.dataList} />\r\n    } else {\r\n      contentEl = <DataTableComponent columns={this.state.columns} dataList={this.state.dataList} isLoading={this.state.isLoading} isSelectable={false} />\r\n    }\r\n    this.setState({\r\n      contentEl: contentEl\r\n    })\r\n  }\r\n  boardList(list) {\r\n    try{\r\n      const listItems = list.map((item, index) =>\r\n      <tr key={index}>\r\n        {/* <td>{item.id}</td> */}\r\n        <td>{item.name}</td>\r\n        {/* <Nav.Link href={`${this.props.pathInfo.url}/detail#${item.id}`}>\r\n          <td>{item.subject}</td>\r\n        </Nav.Link> */}\r\n        <Link to={{pathname: `${this.props.pathInfo.url}/detail`, search: `?id=${item.id}&groupType=${this.props.location.state.groupType}`, state: {groupType: this.props.location.state.groupType}}}\r\n        className=\"nav-link text-dark\">\r\n          <td>{item.subject}</td>\r\n        </Link>\r\n        <td>{this.dateTimeFormat(item.created_at)}</td>\r\n      </tr>\r\n      );\r\n      return (\r\n        <tbody>{listItems}</tbody>\r\n      );\r\n\r\n    } catch(e) {\r\n      console.log('boardList err', e);\r\n    }\r\n  } \r\n  dateTimeFormat(date) {\r\n    return moment(date).format('YYYY.MM.DD');\r\n  }\r\n  // goDetail() {\r\n  //   return href=\"#home\"\r\n  // } \r\n  handleConfirmPassword = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n    if (e.target.value !== '1234') {\r\n      this.setState({\r\n        pMessage: \"패스워드가 일치하지 않습니다.\",\r\n        // password: '',\r\n      }) //사용자가 입력한 값이 재확인 비번과 일치하지 않을 경우\r\n    } else {\r\n      this.setState({\r\n        blindStyle: {\r\n          width:'0%'\r\n        }\r\n        // password: '',\r\n      }) //사용자가 입력한 값이 재확인 비번과 일치하지 않을 경우\r\n\r\n    }\r\n    console.log('password--', this.state.password);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Route path={`${this.props.pathInfo.url}/:type`} component={BoardDetail}/> */}\r\n        <div className=\"clearfix content-btn-top mb-2\">\r\n         <CategorySeletctList location={this.props.location} categoryGroups={this.props.categoryGroups} isDisabled={true} groupType={this.props.groupType}/> \r\n         {this.state.writeButton}\r\n          {/* <button type=\"button\" className=\"btn btn-dark btn-sm btn-fr\">\r\n            <Link to={`${this.props.pathInfo.url}?groupType=${this.state.groupType}#write`} className=\"text-white\" style={{textDecoration: 'none'}}>글쓰기</Link>\r\n          </button> */}\r\n        </div>\r\n        <div className=\"card\" style={{boxShadow: 'unset'}}>\r\n          {this.state.contentEl}\r\n          {/* <Table striped bordered hover size=\"sm\">\r\n            <colgroup>\r\n              <col width=\"20%\"></col>\r\n              <col width=\"65%\"></col>\r\n              <col width=\"15%\"></col>\r\n            </colgroup>\r\n            <thead>\r\n              <tr>\r\n                <th>작성자</th>\r\n                <th>글 제목</th>\r\n                <th>작성일</th>\r\n              </tr>\r\n            </thead>\r\n            {this.state.bodyEle}\r\n          </Table> */}\r\n        </div>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default PostList;","import React, { useEffect } from \"react\";\r\nimport Prism from \"prismjs\";\r\nimport \"prismjs/themes/prism-tomorrow.css\";\r\n\r\nconst PrismCode = ({ code, language }) => {\r\n  useEffect(() => {\r\n    Prism.highlightAll();\r\n  }, []);\r\n  return (\r\n    <div className=\"Code\">\r\n      <pre>\r\n        <code className={`language-${language}`}>{code}</code>\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\nexport default PrismCode;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { uploadFile } from 'react-s3';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw, convertFromHTML, ContentState, AtomicBlockUtils } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport PrismCode from '../code/PrismCode';\r\nimport \"prismjs/themes/prism-tomorrow.css\";\r\nimport PrismDecorator from \"draft-js-prism\";\r\n// const PrismDecorator = require('draft-js-prism');\r\nrequire('dotenv').config();\r\n\r\nconst Prism = require('prismjs')\r\n// import {isEmpty} from 'lodash';\r\n\r\nclass DraftEditor extends Component {\r\n  constructor(props) {\r\n    console.log('BoardDetail props--', props);\r\n    const decorator = new PrismDecorator({\r\n      // Provide your own instance of PrismJS\r\n      prism: Prism,\r\n      defaultSyntax: \"javascript\",\r\n    });\r\n    const editorState = EditorState.createEmpty(decorator)\r\n    super(props);\r\n    this.state  = {\r\n      // editorState: EditorState.createEmpty(),\r\n      editorState: editorState,\r\n      content: '',\r\n      editContent: '',\r\n      tempFileType: '',\r\n      tempImageUrl: '',\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    // this.uploadImageCallBack = this.uploadImageCallBack(this);\r\n  }\r\n  componentDidMount() {\r\n    this.calcState(this.props.editContent);\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log('prevState ', prevState);\r\n    console.log('prevProps ', prevProps);\r\n  }\r\n  handleChange(e) {\r\n    this.props.onTemperatureChange({content: `${e}`, image: this.state.tempImageUrl});\r\n  }\r\n  calcState(value) {\r\n    if (value) {\r\n      console.log(value)\r\n      const blocksFromHTML = convertFromHTML(value);\r\n      console.log('contentBlocks', blocksFromHTML.contentBlocks)\r\n      const state = ContentState.createFromBlockArray(\r\n        blocksFromHTML.contentBlocks,\r\n        blocksFromHTML.entityMap,\r\n      );\r\n        this.setState({\r\n        editorState: EditorState.createWithContent(state, this.decorator)\r\n      })\r\n    }\r\n  }\r\n  insertImageBlock() {\r\n    const contentState = this.state.editorState.getCurrentContent();\r\n    console.log(\r\n      \"contentStateRaw\",\r\n      JSON.stringify(convertToRaw(contentState), null, 2)\r\n    );\r\n    console.log('this.state.tempFileType--', this.state.tempFileType);\r\n    const contentStateWithEntity = contentState.createEntity(\r\n      this.state.tempFileType,\r\n      \"IMMUTABLE\",\r\n      // { src: this.props.tempImageUrl }\r\n    );\r\n    const newEditorState = EditorState.set(this.state.editorState, {\r\n      currentContent: contentStateWithEntity\r\n    });\r\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n    const insertedEditorState = AtomicBlockUtils.insertAtomicBlock(\r\n      newEditorState,\r\n      entityKey,\r\n      \" \"\r\n    );\r\n    this.setState({\r\n      editorState: insertedEditorState\r\n    });\r\n  }\r\n  _getData = async() => {\r\n    const res = await axios.get(`/api/posts/detail?id=${this.props.postId}`);\r\n    console.log('/api/posts/detail', res)\r\n    if(res.data.result.length > 0) {\r\n      this.setState({\r\n        title: res.data.result[0].subject,\r\n        content: res.data.result[0].content\r\n      }) \r\n  \r\n    }\r\n  }\r\n  onEditorStateChange = (currentState) => {\r\n    // editorState에 값 설정\r\n    this.setState({\r\n      editorState: currentState\r\n    });\r\n    const htmlContent = draftToHtml(convertToRaw(currentState.getCurrentContent()));\r\n    console.log('htmlContent', htmlContent)\r\n    this.handleChange(htmlContent);\r\n    const decorator = new PrismDecorator({\r\n      // Provide your own instance of PrismJS\r\n      prism: Prism,\r\n      defaultSyntax: \"javascript\",\r\n    });\r\n    EditorState.set(currentState, {decorator});\r\n    // this.props.changedContent = draftToHtml(convertToRaw(currentState.getCurrentContent()));\r\n\r\n  };\r\n  editContent = (content) => {\r\n    this.setState({\r\n      editContent: content\r\n    }) \r\n\r\n  }\r\n  uploadImageCallBack = (file) => {\r\n    console.log('file---', file)\r\n    this.setState({\r\n      tempFileType: file.type,\r\n      tempImageUrl: file.name\r\n    }) \r\n    const awsconfig = {\r\n      bucketName: process.env.REACT_APP_S3_BUCKET_NAME,\r\n      region: process.env.REACT_APP_AWS_REGION,\r\n      accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID,\r\n      secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY,\r\n    }\r\n    // this.insertImageBlock()\r\n    return new Promise((resolve, reject) => {\r\n      console.log('resolve file---', file);\r\n      uploadFile(file, awsconfig)\r\n        .then(res => {\r\n          console.log(res)\r\n          resolve({ data: { link: res.location } });\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          reject(err);\r\n        });\r\n      }\r\n    );\r\n  }\r\n  myBlockRenderer(contentBlock) {\r\n    const type = contentBlock.getType();\r\n    console.log('myBlockRenderer-', type)\r\n    if (type === 'code') {\r\n      return {\r\n        component: MediaComponent,\r\n        editable: true,\r\n        props: {\r\n          foo: 'bar',\r\n        },\r\n      };\r\n    }\r\n  }\r\n  render(){\r\n    return (\r\n      <div>\r\n      <Editor\r\n        // 에디터와 툴바 모두에 적용되는 클래스\r\n        wrapperClassName=\"wrapper-class\"\r\n        // 에디터 주변에 적용된 클래스\r\n        editorClassName=\"editor\"\r\n        // 툴바 주위에 적용된 클래스\r\n        toolbarClassName=\"toolbar-class\"\r\n        // 툴바 설정\r\n        toolbar={{\r\n          // inDropdown: 해당 항목과 관련된 항목을 드롭다운으로 나타낼것인지\r\n          inline: { inDropdown: false },\r\n          list: { inDropdown: true },\r\n          textAlign: { inDropdown: true },\r\n          link: { inDropdown: true },\r\n          history: { inDropdown: false },\r\n          image: { \r\n            uploadCallback: this.uploadImageCallBack,\r\n            inputAccept: 'image/*',\r\n            previewImage: true,\r\n            urlEnabled: false,\r\n            uploadEnabled: true,\r\n            alt: { present: false, mandatory: false },\r\n            defaultSize: {\r\n              height: 'auto',\r\n              width: 'auto',\r\n            },\r\n          },\r\n        }} \r\n        placeholder=\"내용을 작성해주세요.\"\r\n        // 한국어 설정\r\n        localization={{\r\n          locale: 'ko',\r\n        }}\r\n        spellCheck\r\n        // 초기값 설정\r\n        editorState={this.state.editorState}\r\n        // 에디터의 값이 변경될 때마다 onEditorStateChange 호출\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        // blockRendererFn={this.myBlockRenderer}\r\n      />      \r\n      </div>\r\n    )\r\n  }\r\n}\r\nclass MediaComponent extends Component {\r\n  render() {\r\n    console.log('MediaComponent', this.props)\r\n    const {block, contentState} = this.props;\r\n    const enKey = contentState.getLastCreatedEntityKey()\r\n    // console.log('block.getEntityAt(0)', block.getEntityAt(0))\r\n    console.log('block', block)\r\n    // const data = contentState.getEntity(enKey).getData();\r\n    // console.log('data', data)\r\n    // const {foo} = this.props.blockProps;\r\n    // const data = contentState.getEntity(block.getEntityAt(0)).getData();\r\n    // Return a <figure> or some other content using this data.\r\n    return (\r\n      <PrismCode code={block.text} language=\"javascript\" />\r\n    )\r\n  }\r\n}\r\nexport default DraftEditor;","import React, { Component } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\nimport Prism from 'prismjs';\r\n// 여기 css를 수정해서 코드 하이라이팅 커스텀 가능\r\n// import 'prismjs/themes/prism.css';\r\n// import \"prismjs/themes/prism-tomorrow.css\";\r\nimport './prism-tomorrow.css';\r\n\r\n// import '@toast-ui/editor-plugin-code-syntax-highlight/dist/toastui-editor-plugin-code-syntax-highlight.css';\r\nimport codeSyntaxHighlight from '@toast-ui/editor-plugin-code-syntax-highlight';\r\n \r\n\r\nclass ToastUIEditor extends Component {\r\n\r\n  editorRef = React.createRef();\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      content: \"\",\r\n    };\r\n    this.onChanged = this.onChanged.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this._setEditorHTML(this.props.editContent);\r\n  }\r\n  _setEditorHTML(html) {\r\n    this.editorRef.current.getInstance().setHTML(html);\r\n  }\r\n  onChanged() {\r\n    this.props.onTemperatureChange({content: `${this.editorRef.current.getInstance().getHTML()}`});\r\n  }\r\n \r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n        <Editor\r\n\r\n          previewStyle=\"vertical\"\r\n\r\n          height=\"calc(100vh - 150px)\"\r\n\r\n          initialEditType=\"wysiwyg\"\r\n\r\n          placeholder=\"글쓰기\"\r\n\r\n          ref={this.editorRef}\r\n          plugins={[[codeSyntaxHighlight, { highlighter: Prism }]]}\r\n          onChange={this.onChanged}\r\n          // hooks={{\r\n          //   addImageBlobHook: async (blob, callback) => {\r\n          //     const upload = await this.uploadImage(blob);\r\n          //     callback(upload, \"alt text\");\r\n          //     return false;\r\n          //   }\r\n          // }}\r\n        />\r\n\r\n\r\n      </>\r\n\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\n \r\n\r\nexport default ToastUIEditor;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {isEmpty} from 'lodash';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Comments extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dataList: [],\r\n      content: '',\r\n    }\r\n    this.setContent = this.setContent.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._getData();\r\n  }\r\n  // componentWillUnmount() { \r\n  // }\r\n  setContent(e) {\r\n    this.setState({\r\n      content: e.target.value\r\n    });\r\n  }\r\n  _getData = async() => {\r\n    try {\r\n      const res = await axios.get(`/api/posts/comment-list?id=${this.props.postId}`);\r\n      console.log('/api/posts/comment-list', res)\r\n      this.setState({\r\n        dataList: res.data.result\r\n      })\r\n    } catch(e) {\r\n      toast.error('error');\r\n    }\r\n  }\r\n  async _registContent() {\r\n    const now = new Date();\r\n    const params = {\r\n      userId: this.props.userInfo.id,\r\n      postId: this.props.postId,\r\n      content: this.state.content,\r\n      ip: this.props.ip,\r\n      created_at: now,\r\n\r\n    }\r\n    await axios.post('/api/posts/comment-regist', params);\r\n    toast.success('저장되었습니다.')\r\n    console.log('complete!');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          {this.state.dataList.map((d, index) => \r\n            <div key={index}>\r\n              {d.content}\r\n              <hr />\r\n            </div>\r\n          )}\r\n        <div className=\"form-floating\">\r\n          <textarea className=\"form-control\"\r\n            placeholder=\"Leave a comment here\"\r\n            id=\"floatingTextarea2\"\r\n            style={{height: '100px'}}\r\n            value={this.state.content}\r\n            onChange={this.setContent}\r\n            ></textarea>\r\n          <label for=\"floatingTextarea2\">Comments</label>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Comments;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DraftEditor from '../lib/editor/DraftEditor';\r\nimport Modal from 'react-bootstrap/Modal'\r\n// import { uploadFile } from 'react-s3';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { isEmpty } from 'lodash';\r\nimport queryString from 'query-string';\r\nimport ToastUIEditor from '../lib/editor/ToastUIEditor';\r\nimport * as userActions from \"../../redux/modules/users\";\r\nimport { toast } from \"react-toastify\";\r\nimport CategorySeletctList from './CategorySeletctList';\r\nimport Comments from './Comments';\r\n\r\nclass PostDetail extends Component {\r\n  constructor(props) {\r\n    console.log('PostDetail props--', props, process.env);\r\n    super(props);\r\n    this.state  = {\r\n      title: '',\r\n      content: '',\r\n      file: null,\r\n      image: '',\r\n      email: '',\r\n      editContent: '',\r\n      mode: 'read',\r\n      saveButtonText: '수정',\r\n      actionButtonText: '목록',\r\n      id: '',\r\n      modalShow: false,\r\n      updateBtnEl: '',\r\n      deleteBtnEl: '',\r\n    };\r\n    // this.childRef = useRef();\r\n    // this.callChildFunc = useCallback(() => {\r\n    //   console.log(childRef.current.getAlert()); // 자식 컴포넌트 함수 호출\r\n    //   console.log(childRef.current.getRowId()); // 자식 컴포넌트 데이터 가져오기\r\n    // });\r\n    this.modeChange = this.modeChange.bind(this);\r\n    this.actionModeChange = this.actionModeChange.bind(this);\r\n    this.changedContent = this.changedContent.bind(this);\r\n    this.deletePost = this.deletePost.bind(this);\r\n    // this.titleChanged = this.titleChanged.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const {location, history} = this.props;\r\n    //TODO\r\n    const query = queryString.parse(location.search);\r\n    // if(!state){\r\n    //   history.push('/');\r\n    // }\r\n    console.log('PostDetail - componentDidMount ::', location, history, query);\r\n    if(!isEmpty(location.hash) && location.hash === '#write' && isEmpty(this.props.userInfo)) {\r\n      history.push('/auth/login');\r\n    }\r\n\r\n    this.setState({groupType: query.groupType});\r\n    // if(!isEmpty(this.props.location.state) && this.props.location.state.groupType) {\r\n    //   this.setState({groupType: query.groupType});\r\n    // }\r\n\r\n    if(this.props.postId) {\r\n      this._getData();\r\n    } else {\r\n      const updateBtnEl = <button type=\"button\" className=\"btn btn-dark btn-sm btn-fr ms-1\" onClick={this.modeChange}>저장</button>;\r\n      this.setState({\r\n        mode: 'modify',\r\n        saveButtonText: '저장',\r\n        actionButtonText: '취소',\r\n        updateBtnEl: updateBtnEl\r\n      })\r\n    }\r\n  }\r\n  componentWillUpdate () {\r\n  }\r\n  _getData = async() => {\r\n    const res = await axios.get(`/api/posts/detail?id=${this.props.postId}`);\r\n    console.log('/api/posts/detail', res)\r\n    let deleteBtnEl = '';\r\n    let updateBtnEl = '';\r\n    if(res.data.result.length > 0) {\r\n      // updateBtnEl = <button type=\"button\" className=\"btn btn-dark btn-sm float-end ms-1\" onClick={this.modeChange}>{this.state.saveButtonText}</button>;\r\n      if(!isEmpty(this.props.userInfo) && (this.props.userInfo.email === res.data.result[0].email || this.props.userInfo.grade === 'MASTER')) {\r\n        updateBtnEl = <button type=\"button\" className=\"btn btn-dark btn-sm btn-fr ms-1\" onClick={this.modeChange}>{this.state.saveButtonText}</button>;\r\n        deleteBtnEl = <button type=\"button\" className=\"btn btn-dark btn-sm btn-fr ms-1\" onClick={this.deletePost}>삭제</button>;\r\n      }\r\n      this.setState({\r\n        title: res.data.result[0].subject,\r\n        content: res.data.result[0].content,\r\n        id: res.data.result[0].id,\r\n        image: res.data.result[0].image,\r\n        email: res.data.result[0].email,\r\n        updateBtnEl: updateBtnEl,\r\n        deleteBtnEl: deleteBtnEl,\r\n      }) \r\n    \r\n    }\r\n  }\r\n  async deletePost() {\r\n    try {\r\n      await axios.delete(`/api/posts/delete?id=${this.props.postId}`);\r\n      this.props.history.push({pathname: '/posts', search: `?groupType=${this.state.groupType}`});\r\n      toast.success('삭제되었습니다.')\r\n    } catch(e) {\r\n      console.log(e)\r\n    }\r\n\r\n  }\r\n \r\n  changedContent(obj) {\r\n    let imageUrl = this.state.image;\r\n    if(!isEmpty(obj.image)) {\r\n      imageUrl = `${process.env.REACT_APP_IMAGE_PATH}/${obj.image}`;\r\n    }\r\n    this.setState({\r\n      content: obj.content,\r\n      image: imageUrl\r\n    });\r\n  }\r\n  actionModeChange() {\r\n    const {history} = this.props;\r\n    if(this.state.actionButtonText === '목록') {\r\n      // history.push(this.props.matchUrl);\r\n      history.push({pathname: '/posts', search: `?groupType=${this.state.groupType}`, state: this.props.location.state});\r\n    } else {\r\n      this.setModalShow(true);\r\n    }\r\n  }\r\n  goList() {\r\n    const {history} = this.props;\r\n    this.setModalShow(false);\r\n    history.push({pathname: '/posts', search: `?groupType=${this.state.groupType}`, state: this.props.location.state});\r\n  \r\n  }\r\n  modeChange() {\r\n    if(this.state.mode === 'read') {\r\n      this.setState({\r\n        mode: 'modify',\r\n        saveButtonText: '저장'\r\n      })\r\n    } else {\r\n      if(this.props.isRegist) {\r\n        this._registContent();\r\n      } else {\r\n        this._updateContent();\r\n      }\r\n    }\r\n  }  \r\n  titleChanged = (e) => {\r\n    this.setState({\r\n      title: e.target.value\r\n    })\r\n  }\r\n  _contentValidation() {\r\n    if(isEmpty(this.state.title)) {\r\n      toast.error(\"글 제목을 입력하세요.\");\r\n      return false;\r\n    }\r\n    if(isEmpty(this.state.content)) {\r\n      toast.error(\"내용을 입력하세요.\");\r\n      return false;\r\n    }\r\n    const newText = this.state.content.replace(/(<([^>]+)>)/ig,\"\");\r\n    if(newText.length < 30 && this.state.groupType !== 'GALLERY') {\r\n      toast.error(\"내용을 30자 이상 입력하세요.\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  async _registContent() {\r\n    if(!this._contentValidation()) {\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const params = {\r\n      name: this.props.userInfo.username,\r\n      email: this.props.userInfo.email,\r\n      password: '',\r\n      subject: this.state.title,\r\n      content: this.state.content,\r\n      ip: this.props.ipInfo.IPv4,\r\n      created_at: now,\r\n      groupType: this.state.groupType,\r\n      image: this.state.image\r\n\r\n    }\r\n    await axios.post('/api/posts/regist', params);\r\n    toast.success('저장되었습니다.')\r\n    console.log('complete!');\r\n    const {history} = this.props;\r\n    history.push({pathname: this.props.matchUrl, search: `?groupType=${this.state.groupType}`, state: this.props.location.state});\r\n    // history.push(`${this.props.matchUrl}?groupType=${this.state.groupType}`);\r\n  }\r\n  async _updateContent() {\r\n    // const params = {\r\n    //   title: this.state.title,\r\n    //   content: this.state.content,\r\n    //   id: this.state.id,\r\n    //   file: this.state.file\r\n    // }\r\n    const formData = new FormData();\r\n    formData.append(`name`, this.props.userInfo.username);\r\n    formData.append(`email`, this.props.userInfo.email);\r\n    formData.append(`file`, this.state.file);\r\n    formData.append(`title`, this.state.title);\r\n    formData.append(`content`, this.state.content);\r\n    formData.append(`ip`, this.props.ipInfo.IPv4);\r\n    formData.append(`id`, this.state.id);\r\n    formData.append(`image`, this.state.image);\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    }\r\n    await axios.post('/api/posts/update', formData, config);\r\n    this.setState({\r\n      mode: 'read',\r\n      saveButtonText: '수정'\r\n    });\r\n    this._getData();\r\n    toast.success('저장되었습니다.');\r\n    console.log('complete!');\r\n  }\r\n  _editorElement() {\r\n    let editEl;\r\n    if(this.state.groupType === 'GALLERY') {\r\n      editEl = <DraftEditor\r\n      editContent={this.state.content}\r\n      onTemperatureChange={this.changedContent}\r\n    />\r\n\r\n    } else {\r\n      editEl = <ToastUIEditor\r\n      editContent={this.state.content}\r\n      onTemperatureChange={this.changedContent}\r\n    />\r\n\r\n    }\r\n    return <div>\r\n              <div className=\"input-group mb-3\">\r\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Title</span>\r\n                <input type=\"text\" className=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\" \r\n                  value={this.state.title}\r\n                  onChange={this.titleChanged}\r\n                />\r\n              </div>\r\n              {editEl}\r\n          </div>\r\n  }\r\n\r\n  setModalShow(isShow) {\r\n    this.setState({\r\n      modalShow: isShow\r\n    })\r\n  }\r\n  render(){\r\n    let contentElement;\r\n    if(this.state.mode !== 'read') {\r\n      contentElement = this._editorElement();\r\n    } else {\r\n      contentElement = <div>\r\n        <div style={{marginBottom: '20px'}}><h2>{this.state.title}</h2></div>\r\n        <div dangerouslySetInnerHTML={ {__html: this.state.content} }></div>\r\n        <Comments ip={this.props.ipInfo.IPv4} userInfo={this.props.userInfo} postId={this.props.postId} />\r\n        </div>;\r\n    }\r\n    return (\r\n      <div>\r\n        {/* <CounterContainer /> */}\r\n        <div className=\"clearfix mb-2\">\r\n        <CategorySeletctList location={this.props.location} categoryGroups={this.props.categoryGroups} isDisabled={true} groupType={this.props.groupType}/> \r\n          {this.state.deleteBtnEl}\r\n          {this.state.updateBtnEl}\r\n          <button type=\"button\" className=\"btn btn-dark btn-sm btn-fr ms-1\" onClick={this.actionModeChange}>{this.state.actionButtonText}</button>\r\n        </div>\r\n        {contentElement}\r\n        <MyVerticallyCenteredModal\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setModalShow(false)}\r\n          onHideConfirm={() => this.goList()}\r\n        />\r\n        {/* <div dangerouslySetInnerHTML={ {__html: this.state.content} }></div> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction MyVerticallyCenteredModal(props) {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"sm\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      {/* <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Modal heading\r\n        </Modal.Title>\r\n      </Modal.Header> */}\r\n      <Modal.Body>\r\n        <h4>글 작성 취소</h4>\r\n        <p>\r\n          글 작성을 취소하시겠습니까?\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n      <button type=\"button\" className=\"btn btn-dark btn-sm btn-fr ms-1\" onClick={props.onHide}>취소</button>\r\n        <button type=\"button\" className=\"btn btn-dark btn-sm btn-fr ms-1\" onClick={props.onHideConfirm}>확인</button>\r\n        {/* <Button onClick={props.onHide}>Close</Button> */}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  logged: state.users.logged,\r\n  userInfo: state.users.userInfo,\r\n  ipInfo: state.users.ipInfo\r\n});\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getIpInfo: () => dispatch(userActions.actionCreators.getIpInfo())\r\n  };\r\n};\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(PostDetail)\r\n);\r\n// export default PostDetail;","import React from 'react';\r\nimport PostList from '../components/posts/PostList';\r\nimport PostDetail from '../components/posts/PostDetail';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport queryString from 'query-string';\r\n\r\nconst Posts = (props) => {\r\n  console.log('Posts props ::', props);\r\n  let elements = '<div></div>'\r\n  const query = queryString.parse(props.location.search);\r\n  if(query.id) {\r\n    elements = <PostDetail categoryGroups={props.categoryGroups} postId={query.id} groupType={query.groupType} isRegist={false} userInfo={props.userInfo} location={props.location} history={props.history}  matchUrl={props.match.url} />\r\n  } else if(props.location.hash !== \"\") {\r\n      elements = <PostDetail categoryGroups={props.categoryGroups} isRegist={true} groupType={query.groupType} userInfo={props.userInfo} location={props.location} history={props.history} matchUrl={props.match.url} />\r\n  } else {\r\n      // props.history.replace(props.history.location)\r\n      elements = <PostList categoryGroups={props.categoryGroups} pathInfo={props.match} userInfo={props.userInfo} groupType={query.groupType} location={props.location} history={props.history} />\r\n  }\r\n\r\n  return (\r\n    <main className=\"content\" style={{backgroundColor: '#fff'}}>\r\n      <div className=\"container p-0\">\r\n\r\n        {/* <h1 className=\"h3 mb-3\">Post Page</h1> */}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              {/* <div className=\"card-header\">\r\n                <h5 className=\"card-title mb-0\">Empty card</h5>\r\n              </div> */}\r\n              <div className=\"card-body\">\r\n                {elements}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n  logged: state.users.logged,\r\n  userInfo: state.users.userInfo,\r\n  categoryGroups: state.users.categoryGroups,\r\n});\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n  )(Posts)\r\n);\r\n// export default Posts;","import React, { Component } from 'react';\r\n\r\nclass UserCheck extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      products: [],\r\n      cart: [],\r\n      quantity: 1,\r\n      totalAmount: 0\r\n    };\r\n  };\r\n\r\n\r\ncomponentDidMount() {\r\n    // this.props.getUsers();\r\n//cart state가 local storage에 있으면 불러오기\r\n    // let cart = localStorage.cart;\r\n    // if(cart) {\r\n    //     this.setState(prevState => ({\r\n    //     cart: JSON.parse(cart)\r\n    //     }), function() {\r\n    //     this.sumTotalAmount();\r\n    //     })\r\n    // }\r\n  };\r\n  render() {\r\n    return (\r\n      <div></div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserCheck;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport moment from 'moment';\r\nimport {isEmpty} from 'lodash';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass ActivityContents extends Component {\r\n  constructor(props) {\r\n    console.log('ActivityContents props--', props);\r\n    super(props);\r\n    this.state  = {\r\n      password: '', // 첫번째 패스워드\r\n      rePassword: '', // 두번째 패스워드\r\n      pMessage:'패스워드를 입력하세요.', // 확인 메시지 (패스워드 일치여부를 사용자에게 알려주는 메시지)\r\n      show: false,\r\n      blindStyle: {\r\n        width:'100%'\r\n      },\r\n      bodyEle: '',\r\n      loading: true,\r\n      dataList: [],\r\n      groupType: '',\r\n      columns: []\r\n\r\n    };  // 초기 state값을 셋팅해준다. 빈 스트링 값은 false를 뜻한다.\r\n  }\r\n  componentDidMount() {\r\n    this._getList();\r\n  }\r\n  _getList = async() => {\r\n    try {\r\n      const res = await axios.get('/api/posts/activities');\r\n      console.log('_getList--', res)\r\n      // const bodyEle = this.boardList(res.data.result);\r\n      this.setState({\r\n        // bodyEle: bodyEle,\r\n        loading: false,\r\n        dataList: res.data.result\r\n      }) \r\n    } catch(e) {\r\n      this.props.history.push('/');\r\n    }\r\n  }\r\n \r\n  boardList(list) {\r\n    try{\r\n      const listItems = list.map((item, index) =>\r\n      <tr key={index}>\r\n        {/* <td>{item.id}</td> */}\r\n        <td>{item.name}</td>\r\n        {/* <Nav.Link href={`${this.props.pathInfo.url}/detail#${item.id}`}>\r\n          <td>{item.subject}</td>\r\n        </Nav.Link> */}\r\n        <Link to={{pathname: `${this.props.pathInfo.url}/detail`, search: `?id=${item.id}&groupType=${this.props.location.state.groupType}`, state: {groupType: this.props.location.state.groupType}}}\r\n        className=\"nav-link text-dark\">\r\n          <td>{item.subject}</td>\r\n        </Link>\r\n        <td>{this.dateTimeFormat(item.created_at)}</td>\r\n      </tr>\r\n      );\r\n      return (\r\n        <tbody>{listItems}</tbody>\r\n      );\r\n\r\n    } catch(e) {\r\n      console.log('boardList err', e);\r\n    }\r\n  } \r\n  dateTimeFormat(date) {\r\n    return moment(date).format('YYYY.MM.DD');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-8 col-xl-9\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n\r\n          <h5 className=\"card-title mb-0\">Activities</h5>\r\n        </div>\r\n        <div className=\"card-body h-100\">\r\n          {this.state.dataList.map((data, index) => \r\n            <div key={index}>\r\n              <div className=\"d-flex align-items-start\">\r\n                <img src={data.user_image} width=\"36\" height=\"36\" className=\"rounded-circle me-2\" alt=\"Vanessa Tucker\" />\r\n                <div className=\"flex-grow-1\">\r\n                  {/* <small className=\"float-end text-navy\">5m ago</small> */}\r\n                  <strong>{data.name}</strong> {data.subject} <strong>게시글이 작성되었습니다.</strong><br />\r\n                  <small className=\"text-muted\">{this.dateTimeFormat(data.created_at)}</small><br />\r\n\r\n                </div>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n          )}\r\n\r\n{/* \r\n          <div className=\"d-flex align-items-start\">\r\n            <img src=\"img/avatars/avatar.jpg\" width=\"36\" height=\"36\" className=\"rounded-circle me-2\" alt=\"Charles Hall\" />\r\n            <div className=\"flex-grow-1\">\r\n              <small className=\"float-end text-navy\">30m ago</small>\r\n              <strong>Charles Hall</strong> posted something on <strong>Christina Mason</strong>'s timeline<br />\r\n              <small className=\"text-muted\">Today 7:21 pm</small>\r\n\r\n              <div className=\"border text-sm text-muted p-2 mt-1\">\r\n                Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus\r\n                pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante.\r\n              </div>\r\n\r\n              <a href=\"#\" className=\"btn btn-sm btn-danger mt-1\"><i className=\"feather-sm\" data-feather=\"heart\"></i> Like</a>\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n          <div className=\"d-flex align-items-start\">\r\n            <img src=\"img/avatars/avatar-4.jpg\" width=\"36\" height=\"36\" className=\"rounded-circle me-2\" alt=\"Christina Mason\" />\r\n            <div className=\"flex-grow-1\">\r\n              <small className=\"float-end text-navy\">1h ago</small>\r\n              <strong>Christina Mason</strong> posted a new blog<br />\r\n\r\n              <small className=\"text-muted\">Today 6:35 pm</small>\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n          <div className=\"d-flex align-items-start\">\r\n            <img src=\"img/avatars/avatar-2.jpg\" width=\"36\" height=\"36\" className=\"rounded-circle me-2\" alt=\"William Harris\" />\r\n            <div className=\"flex-grow-1\">\r\n              <small className=\"float-end text-navy\">3h ago</small>\r\n              <strong>William Harris</strong> posted two photos on <strong>Christina Mason</strong>'s timeline<br />\r\n              <small className=\"text-muted\">Today 5:12 pm</small>\r\n\r\n              <div className=\"row g-0 mt-1\">\r\n                <div className=\"col-6 col-md-4 col-lg-4 col-xl-3\">\r\n                  <img src=\"img/photos/unsplash-1.jpg\" className=\"img-fluid pe-2\" alt=\"Unsplash\" />\r\n                </div>\r\n                <div className=\"col-6 col-md-4 col-lg-4 col-xl-3\">\r\n                  <img src=\"img/photos/unsplash-2.jpg\" className=\"img-fluid pe-2\" alt=\"Unsplash\" />\r\n                </div>\r\n              </div>\r\n\r\n              <a href=\"#\" className=\"btn btn-sm btn-danger mt-1\"><i className=\"feather-sm\" data-feather=\"heart\"></i> Like</a>\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n          <div className=\"d-flex align-items-start\">\r\n            <img src=\"img/avatars/avatar-2.jpg\" width=\"36\" height=\"36\" className=\"rounded-circle me-2\" alt=\"William Harris\" />\r\n            <div className=\"flex-grow-1\">\r\n              <small className=\"float-end text-navy\">1d ago</small>\r\n              <strong>William Harris</strong> started following <strong>Christina Mason</strong><br />\r\n              <small className=\"text-muted\">Yesterday 3:12 pm</small>\r\n\r\n              <div className=\"d-flex align-items-start mt-1\">\r\n                <a className=\"pe-3\" href=\"#\">\r\n        <img src=\"img/avatars/avatar-4.jpg\" width=\"36\" height=\"36\" className=\"rounded-circle me-2\" alt=\"Christina Mason\" />\r\n      </a>\r\n                <div className=\"flex-grow-1\">\r\n                  <div className=\"border text-sm text-muted p-2 mt-1\">\r\n                    Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n          <div className=\"d-flex align-items-start\">\r\n            <img src=\"img/avatars/avatar-4.jpg\" width=\"36\" height=\"36\" className=\"rounded-circle me-2\" alt=\"Christina Mason\" />\r\n            <div className=\"flex-grow-1\">\r\n              <small className=\"float-end text-navy\">1d ago</small>\r\n              <strong>Christina Mason</strong> posted a new blog<br />\r\n              <small className=\"text-muted\">Yesterday 2:43 pm</small>\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n          <div className=\"d-flex align-items-start\">\r\n            <img src=\"img/avatars/avatar.jpg\" width=\"36\" height=\"36\" className=\"rounded-circle me-2\" alt=\"Charles Hall\" />\r\n            <div className=\"flex-grow-1\">\r\n              <small className=\"float-end text-navy\">1d ago</small>\r\n              <strong>Charles Hall</strong> started following <strong>Christina Mason</strong><br />\r\n              <small className=\"text-muted\">Yesterdag 1:51 pm</small>\r\n            </div>\r\n          </div>\r\n\r\n          <hr /> */}\r\n          <div className=\"d-grid\">\r\n            <a href=\"#\" className=\"btn btn-primary\">Load more</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    );\r\n  }\r\n};\r\n\r\nexport default ActivityContents;","import React from 'react';\r\nimport UserCheck from '../components/login/UserCheck';\r\nimport ActivityContents from '../components/contents/ActivityContents';\r\nconst Profile = (props) => {\r\n  return (\r\n    <main className=\"content\">\r\n    <UserCheck />\r\n    <div className=\"container-fluid p-0\">\r\n\r\n      <div className=\"mb-3\">\r\n        <h1 className=\"h3 d-inline align-middle\">Profile</h1>\r\n        {/* <a className=\"badge bg-dark text-white ms-2\" href=\"upgrade-to-pro.html\">\r\n  Get more page examples\r\n</a> */}\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 col-xl-3\">\r\n          <div className=\"card mb-3\">\r\n            <div className=\"card-header\">\r\n              <h5 className=\"card-title mb-0\">Profile Details</h5>\r\n            </div>\r\n            <div className=\"card-body text-center\">\r\n              <div className=\"position-relative\" style={{height: '50px'}}>\r\n                <div className=\"smile-icon position-absolute top-0 start-50 translate-middle mb-2\" style={{width: '50px', height: '50px'}}></div>\r\n              </div>\r\n              {/* <img src=\"img/avatars/avatar-4.jpg\" alt=\"Christina Mason\" className=\"img-fluid rounded-circle mb-2\" width=\"128\" height=\"128\" /> */}\r\n              <div>\r\n              <h5 className=\"card-title mb-0\">Minju Kang</h5>\r\n              {/* <div className=\"text-muted mb-2\">React 공부하다가 React로 간단히 만들어진 블로그 입니다.  </div> */}\r\n\r\n              </div>\r\n\r\n              {/* <div>\r\n                <a className=\"btn btn-primary btn-sm\" href=\"#\">Follow</a>\r\n                <a className=\"btn btn-primary btn-sm\" href=\"#\"><span data-feather=\"message-square\"></span> Message</a>\r\n              </div> */}\r\n            </div>\r\n            <hr className=\"my-0\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"h6 card-title\">Skills</h5>\r\n              <a href=\"#\" className=\"badge bg-primary me-1 my-1\">HTML</a>\r\n              <a href=\"#\" className=\"badge bg-primary me-1 my-1\">JavaScript</a>\r\n              <a href=\"#\" className=\"badge bg-primary me-1 my-1\">Sass</a>\r\n              <a href=\"#\" className=\"badge bg-primary me-1 my-1\">Angular</a>\r\n              <a href=\"#\" className=\"badge bg-primary me-1 my-1\">Vue</a>\r\n              <a href=\"#\" className=\"badge bg-primary me-1 my-1\">React</a>\r\n              <a href=\"#\" className=\"badge bg-primary me-1 my-1\">Redux</a>\r\n              <a href=\"#\" className=\"badge bg-primary me-1 my-1\">UI</a>\r\n              <a href=\"#\" className=\"badge bg-primary me-1 my-1\">UX</a>\r\n            </div>\r\n            <hr className=\"my-0\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"h6 card-title\">About</h5>\r\n              <ul className=\"list-unstyled mb-0\">\r\n                <li className=\"mb-1\"><span data-feather=\"home\" className=\"feather-sm me-1\"></span> Lives in <a href=\"#\">Seoul</a></li>\r\n\r\n                {/* <li className=\"mb-1\"><span data-feather=\"briefcase\" className=\"feather-sm me-1\"></span> Works at <a href=\"#\">GitHub</a></li> */}\r\n                <li className=\"mb-1\"><span data-feather=\"map-pin\" className=\"feather-sm me-1\"></span> From <a href=\"#\">Seoul</a></li>\r\n              </ul>\r\n            </div>\r\n            <hr className=\"my-0\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"h6 card-title\">Elsewhere</h5>\r\n              <ul className=\"list-unstyled mb-0\">\r\n                <li className=\"mb-1\"><a href=\"#\">staciehall.co</a></li>\r\n                <li className=\"mb-1\"><a href=\"#\">Twitter</a></li>\r\n                <li className=\"mb-1\"><a href=\"#\">Facebook</a></li>\r\n                <li className=\"mb-1\"><a href=\"#\">Instagram</a></li>\r\n                <li className=\"mb-1\"><a href=\"#\">LinkedIn</a></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n              <ActivityContents history={props.history} />\r\n        \r\n      </div>\r\n\r\n    </div>\r\n  </main>\r\n\r\n  )\r\n}\r\n\r\nexport default Profile;","import React, {useState} from 'react';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\r\nrequire('dotenv').config();\r\n\r\n// const appId = process.env.REACT_APP_FACEBOOK_APP_ID;\r\n// const appId = '265795955063722';\r\nlet appId = process.env.REACT_APP_FACEBOOK_TEST_APP_ID;\r\nif (process.env.NODE_ENV === 'production') {\r\n  appId = process.env.REACT_APP_FACEBOOK_APP_ID\r\n}\r\n\r\nconst FaceBookLoginBtn = ({ location, history, onFacebookLogin }) =>{\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const responseFacebook = async(res) => {\r\n      console.log('onSuccess ::', res);\r\n    const params = {appId: res.userID, email: res.email, name: res.name, imageUrl: res.picture.data.url, provider: res.graphDomain}\r\n      // const { googleId, profileObj : { email, name, imageUrl } } = response;\r\n      setIsLoggedIn(true)\r\n      // console.log('email---', email)\r\n      await onFacebookLogin (params);\r\n  }\r\n\r\n  const onFailure = (error) => {\r\n      console.log(error);\r\n  }\r\n\r\n  return(\r\n      <div className=\"d-inline-block\">\r\n          <FacebookLogin\r\n            appId={appId}\r\n            fields=\"name,email,picture\"\r\n            autoLoad={false}\r\n            callback={responseFacebook}\r\n            render={renderProps => (\r\n              <button type=\"button\" className=\"btn btn-md\" onClick={renderProps.onClick} disabled={renderProps.disabled}>\r\n                <div className=\"facebook-icon-sq\" style={{width: '30px', height: '30px'}}></div>\r\n              </button>\r\n            )}\r\n          />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default FaceBookLoginBtn;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport GoogleLoginBtn from './GoogleLoginBtn';\r\nimport FaceBookLoginBtn from './FaceBookLoginBtn.';\r\nimport {isEmpty} from 'lodash';\r\n// import InputWithLabel from '../components/auth/InputWithLabel';\r\n// import * as authActions from '../redux/modules/auth';\r\nimport storage from '../lib/storage';\r\n// import {mapStateToProps, mapDispatchToProps} from '../../redux/connectMapProps';\r\n// import { withRouter } from \"react-router-dom\";\r\n// import { connect } from 'react-redux';\r\nrequire('dotenv').config();\r\nconst crypto = require('crypto');\r\nconst solt = process.env.REACT_APP_HIDDEN_KEY;\r\n\r\nconst InputContents = (props) => {\r\n  console.log('props', props);\r\n\tconst [inputs, setInputs] = useState({\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t});\r\n\tconst { email, password } = inputs;\r\n\r\n\tconst currentState = props.store.getState();\r\n\t\r\n\tconsole.log(props.store.getState())\r\n\tif (!currentState.users.logged && !isEmpty(storage.get('loggedInfo'))) {\r\n\t\tprops.setUserInfo(storage.get('loggedInfo'));\r\n\t\tprops.history.push(\"/\");\r\n\t}\r\n\tif (currentState.users.logged && !isEmpty(storage.get('loggedInfo'))) {\r\n\t\tprops.history.push(\"/\");\r\n\t}\r\n  // console.log('history', history);\r\n  // console.log('location', location);\r\n\tconsole.log('SignIn storage.get', storage.get('loggedInfo'))\r\n\tconst goMainPage = () => {\r\n\t\tprops.history.push(\"/\");\r\n\t}//\r\n\t// useEffect(() => {\r\n\t// \tauthActions.initializeForm('login')\r\n\t// }, [])\r\n\t\r\n\tconst provideUserCheck = async (params) => {\r\n\t\tconsole.log('params--', params);\r\n\t\tconst res = await axios.post('/api/userCheck', params);\r\n\t\tconsole.log('res--', res);\r\n\t\tif(isEmpty(res.data.result)) {\r\n\t\t\tprops.history.push(\"/auth/sign-up\", params);\r\n\t\t} else {\r\n      // setUserInfo(res.data.result[0])\r\n\t\t\t// props.userCheck(params)\r\n\t\t\tconst queryParams = {...params, ip: props.ipInfo.IPv4}\r\n\t\t\tawait axios.post('/api/updateLoggedinUser', queryParams);\r\n\t\t\tconst updateRes = await axios.post('/api/userEmailCheck', {email: params.email});\r\n\t\t\tstorage.set('loggedInfo', updateRes.data.result[0])\r\n\t\t\tprops.setUserInfo(updateRes.data.result[0])\r\n\t\t\tprops.setProvideInfo(params);\r\n\t\t\t// dispatch({type: SET_PROVIDE_USER_CHECK, user: res.data.result[0]})\r\n\t\t\tconsole.log('storage.get', storage.get('loggedInfo'))\r\n\t\t\tconsole.log(props.store.getState())\r\n      props.history.push(\"/\");\r\n\t\t}\r\n\t}\r\n\tconst userEmailPassCheck = async() => {\r\n\t\ttry {\r\n      const cipher = crypto.createCipher('aes192', solt);\r\n      cipher.update(inputs.password, 'utf8', 'base64'); // javascript는 utf-8 라고 안 씀\r\n      const outPass = cipher.final('base64');\r\n\t\t\tconst res = await axios.post('/api/userEmailPassCheck', {password: outPass, email: inputs.email});\r\n\t\t\tconsole.log('res--', res);\r\n\t\t\tif(!isEmpty(res.data.result)) {\r\n\t\t\t\tstorage.set('loggedInfo', res.data.result[0]);\r\n\t\t\t\tprops.setUserInfo(res.data.result[0]);\r\n\t\t\t\tprops.history.push(\"/\");\r\n\t\t\t}\r\n\t\t} catch(e) {\r\n\t\t\tconsole.log('error--', e);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tconst onInputChange = (e) => {\r\n\t\tconst { value, name } = e.target;\r\n\t\tsetInputs({\r\n\t\t\t\t...inputs, //기존 input 객체를 복사 - 나머지 패턴\r\n\t\t\t\t[name]: value\r\n\t\t});\r\n\t\t// let emailMessage = '';\r\n\t\t// let passwordMessage = '';\r\n\t\t// let nameMessage = '';\r\n\t\t// let nameInvalid = false;\r\n\t\t// let emailInvalid = false;\r\n\t\t// let passwordInvalid = false;\r\n\t\t// if(name === 'name') {\r\n\t\t// \tif(isEmpty(value)) {\r\n\t\t// \t\tnameMessage = '이름을 입력하세요.'\r\n\t\t// \t\tnameInvalid = true\r\n\t\t// \t}\r\n\t\t// \tsetValidations({\r\n\t\t// \t\t...validations,\r\n\t\t// \t\tnameMessage: nameMessage,\r\n\t\t// \t\tnameInvalid: nameInvalid,\r\n\t\t// \t});\r\n\t\t// }\r\n\t\t// if(name === 'password') {\r\n\t\t// \tif(!isLength(value, { min: 6 })) {\r\n\t\t// \t\tpasswordMessage = '비밀번호를 6자 이상 입력하세요.';\r\n\t\t// \t\tpasswordInvalid = true\r\n\t\t// \t}\r\n\t\t// \tsetValidations({\r\n\t\t// \t\t...validations,\r\n\t\t// \t\tpasswordMessage: passwordMessage,\r\n\t\t// \t\tpasswordInvalid: passwordInvalid,\r\n\t\t// \t});\r\n\r\n\t\t// }\r\n\t\t// if(name === 'email') {\r\n\t\t// \tif(!isEmail(value)) {\r\n\t\t// \t\temailMessage = '잘못된 이메일 형식 입니다.';\r\n\t\t// \t\temailInvalid = true\r\n\t\t// \t}\r\n\t\t// \tsetValidations({\r\n\t\t// \t\t...validations,\r\n\t\t// \t\temailMessage: emailMessage,\r\n\t\t// \t\temailInvalid: emailInvalid,\r\n\t\t// \t});\r\n\t\t// }\r\n}\r\n\tconst handleChange = (e) => {\r\n\t\t// const { AuthActions } = this.props;\r\n\t\tconst { name, value } = e.target;\r\n\r\n\t\t// authActions.changeInput({\r\n\t\t// \t\tname,\r\n\t\t// \t\tvalue,\r\n\t\t// \t\tform: 'login'\r\n\t\t// });\r\n\t}\r\n\t// const { email, password } = this.props.form.toJS();\r\n\t// const { handleChange } = this;\r\n  return (\r\n    <main className=\"d-flex w-100\">\r\n\t\t<div className=\"container d-flex flex-column\">\r\n\t\t\t<div className=\"row vh-100\">\r\n\t\t\t\t<div className=\"col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100\">\r\n\t\t\t\t\t<div className=\"d-table-cell align-middle\">\r\n\r\n\t\t\t\t\t\t<div className=\"text-center mt-4\">\r\n\t\t\t\t\t\t\t<h1 className=\"h2\">Welcome back</h1>\r\n\t\t\t\t\t\t\t<p className=\"lead\">\r\n\t\t\t\t\t\t\t\tSign in to your account to continue\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"m-sm-4\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t{/* <img src=\"img/avatars/avatar.jpg\" alt=\"Charles Hall\" className=\"img-fluid rounded-circle\" width=\"132\" height=\"132\" /> */}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t{/* <InputWithLabel label=\"이메일\" name=\"email\" value={email} onChange={handleChange} placeholder=\"이메일\"/> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"form-label\">Email</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input className=\"form-control form-control-lg\" type=\"email\" name=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your email\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onInputChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"form-label\">Password</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input className=\"form-control form-control-lg\" type=\"password\" name=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onInputChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <small>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"index.html\">Forgot password?</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</small> */}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t{/* <div>\r\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"form-check\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input className=\"form-check-input\" type=\"checkbox\" value=\"remember-me\" name=\"remember-me\" checked />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"form-check-label\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tRemember me next time\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-md\" onClick={userEmailPassCheck}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"login-password-icon\" style={{width: '60px', height: '60px'}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<GoogleLoginBtn onGoogleLogin={provideUserCheck} history={props.history} location={props.location} />\r\n\t\t\t\t\t\t\t\t\t\t\t<FaceBookLoginBtn onFacebookLogin={provideUserCheck} history={props.history} location={props.location} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</main>\r\n  )\r\n}\r\n// export default withRouter(\r\n//   connect(\r\n//     mapStateToProps,\r\n//     mapDispatchToProps\r\n//   )(InputContents)\r\n// );\r\n\r\nexport default InputContents;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from '../../actions';\r\nimport InputContents from \"../login/InputContents\";\r\nimport * as authActions from \"../../redux/modules/auth\";\r\nimport * as userActions from \"../../redux/modules/users\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nexport class BaseContainer extends Component {\r\n \r\n  componentDidMount() {\r\n    console.log('BaseContainer this.props', this.props)\r\n    this.checkUser();\r\n  }\r\n\r\n  checkUser = () => {\r\n    console.log('BaseContainer this.props', this.props)\r\n    const { setUserTemp, history } = this.props;\r\n\r\n    // 먼저 localStorage에 값이 저장되있는지 확인, userInfo값이 있다면, 로그인을 한것으로 인식하고,\r\n    // 바로 setUserTemp를 실시.\r\n    // 이를 하는 이유는 새로고침 했을시, state가 초기화 되어 logged값도 false로 바뀌는데, 새로고침 했을시\r\n    // // 로그인을 유지하기 위함.\r\n    console.log('localStorage.getItem(\"loggedInfo\")--', localStorage.getItem(\"loggedInfo\"));\r\n    if (localStorage.getItem(\"loggedInfo\")) {\r\n      const userInfo = JSON.parse(localStorage.getItem(\"loggedInfo\"));\r\n      setUserTemp({\r\n        id: userInfo.id,\r\n        username: userInfo.username,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // 만약 userInfo값이 localStorage에 없을때에는, api통신을 실시.\r\n    // checkUser();\r\n\r\n    // 만약 checkUser가 실패 했다면, logged는 false로 바뀌므로, 로그인 페이지로 이동시킨다.\r\n    // 또한, /auth/register에서는 /auth/login으로 이동할 필요가 없으므로, auth라는 path가 url에 포함될때는 제외시킨다\r\n    if (!this.props.logged && !window.location.pathname.includes(\"auth\")) {\r\n      // history.push(\"/auth/login\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n//*******connect 한 컴포넌트에서 props 로 내려 받을 수 있다.\r\nconst mapStateToProps = state => ({\r\n  logged: state.users.logged,\r\n  userInfo: state.users.userInfo,\r\n  ipInfo: state.users.ipInfo,\r\n  provideInfo: state.users.provideInfo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // checkUser: () => {\r\n    //   dispatch(authActions.checkUser());\r\n    // },\r\n    userCheck: (params) => {\r\n      dispatch(userActions.actionCreators.getProvideUserCheck(params));\r\n    },\r\n    setUserInfo: (info) => {\r\n      dispatch(userActions.actionCreators.setUserInfo(info));\r\n    },\r\n    setUserTemp: ({ id, username }) => {\r\n      dispatch(authActions.setUserTemp({ id, username }));\r\n    },\r\n    setProvideInfo: (info) => {\r\n\t\t\tdispatch({type: 'SET_PROVIDE_USER_CHECK', info})\r\n    }\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(InputContents)\r\n);\r\n// const mapStateToProps = (state) => ({\r\n//   userInfo: state.userInfo\r\n// });\r\n  \r\n//   /*\r\n//   액션 생성 함수를 사용하여 액션을 생성하고,\r\n//   해당 액션을 dispatch하는 함수를 만든 후, 이를 props로 연결\r\n//   */\r\n//   const mapDispatchToProps = (dispatch) => ({\r\n//     setUserTemp: ({ id, username }) => {\r\n//       dispatch(authActions.setUserTemp({ id, username }));\r\n//     }\r\n//     // setUserInfo: (info) => {\r\n//     //   dispatch(authActions.setColor(info));\r\n//     // }\r\n//   });\r\n// const BaseContainer = connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n//   )(InputContents);\r\n  \r\n  // export default BaseContainer;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from '../../actions';\r\nimport InputContents from \"../login/InputContents\";\r\nimport * as authActions from \"../../redux/modules/auth\";\r\nimport * as userActions from \"../../redux/modules/users\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport storage from \"../lib/storage\";\r\nimport {isEmpty} from 'lodash';\r\nimport App from \"../../App\";\r\n\r\nexport class AuthContainer extends Component {\r\n  componentDidMount() {\r\n    this.checkUser();\r\n    this.getIp();\r\n  }\r\n\r\n  checkUser = () => {\r\n    console.log('AuthContainer props', this.props)\r\n    if (!this.props.logged && !isEmpty(storage.get('loggedInfo'))) {\r\n      this.props.setUserInfo(storage.get('loggedInfo'));\r\n      this.props.history.push(\"/\");\r\n      return;\r\n    }\r\n    if (this.props.logged && !isEmpty(storage.get('loggedInfo'))) {\r\n      this.props.history.push(\"/\");\r\n      return;\r\n    }\r\n  \r\n    // 만약 userInfo값이 localStorage에 없을때에는, api통신을 실시.\r\n    // checkUser();\r\n\r\n    // 만약 checkUser가 실패 했다면, logged는 false로 바뀌므로, 로그인 페이지로 이동시킨다.\r\n    // 또한, /auth/register에서는 /auth/login으로 이동할 필요가 없으므로, auth라는 path가 url에 포함될때는 제외시킨다\r\n    if (!this.props.logged && !window.location.pathname.includes(\"auth\")) {\r\n      this.props.history.push(\"/auth/login\");\r\n    }\r\n  };\r\n  getIp = () => {\r\n    if(isEmpty(this.props.ipInfo)) {\r\n      this.props.getIpInfo();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n//*******connect 한 컴포넌트에서 props 로 내려 받을 수 있다.\r\nconst mapStateToProps = state => ({\r\n  logged: state.users.logged,\r\n  userInfo: state.users.userInfo,\r\n  ipInfo: state.users.ipInfo,\r\n  provideInfo: state.users.provideInfo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // checkUser: () => {\r\n    //   dispatch(authActions.checkUser());\r\n    // },\r\n    userCheck: (params) => {\r\n      dispatch(userActions.actionCreators.getProvideUserCheck(params));\r\n    },\r\n    setUserInfo: (info) => {\r\n      dispatch(userActions.actionCreators.setUserInfo(info));\r\n    },\r\n    getIpInfo: (info) => {\r\n      dispatch(userActions.actionCreators.getIpInfo(info));\r\n    },\r\n    setUserTemp: ({ id, username }) => {\r\n      dispatch(authActions.setUserTemp({ id, username }));\r\n    },\r\n    setProvideInfo: (info) => {\r\n\t\t\tdispatch({type: 'SET_PROVIDE_USER_CHECK', info})\r\n    }\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(AuthContainer)\r\n);\r\n","import React from 'react';\r\nimport './stickyContent.css';\r\nimport Code from '../../../lib/code/PrismCode';\r\nconst LifeCycle = () => {\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: 'calc(100vh - 70px)',\r\n    float: 'right',\r\n    backgroundColor: '#f1f1f1',\r\n    padding: '20px'\r\n  }\r\n  const code1 = `constructor(props)`;\r\n  const code2 = `constructor(props) {\r\n    super(props);\r\n    // 여기서 this.setState()를 호출하면 안 됩니다!\r\n    this.state = { counter: 0 };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }`;\r\n  const code3 = `constructor(props) {\r\n    super(props);\r\n    // 이렇게 하지 마세요!\r\n    this.state = { color: props.color };\r\n   }`;\r\n   const code4 = `componentDidMount()`;\r\n   const code5 = `componentDidUpdate(prevProps, prevState, snapshot)`;\r\n   const code6 = `componentDidUpdate(prevProps) {\r\n    // 전형적인 사용 사례 (props 비교를 잊지 마세요)\r\n    if (this.props.userID !== prevProps.userID) {\r\n      this.fetchData(this.props.userID);\r\n    }\r\n  }`;\r\n  const code7 = `componentWillUnmount()`;\r\n  // const wellowHighlight = 'background-color: rgb(247,218,100);';\r\n  const wellowHighlight = {\r\n    backgroundColor: 'rgb(247,218,100)'\r\n  }\r\n  return (\r\n    <div style={containerStyle} className=\"overflow-auto\">\r\n      \r\n        <div className=\"bd-main\">\r\n            {/* <h2>Category2 {match.params.name}</h2> */}\r\n          <div class=\"bd-toc mt-4 mb-5 my-md-0 ps-xl-3 mb-lg-5 text-muted\">\r\n          <strong class=\"d-block h6 my-2 pb-2 border-bottom\">On this page</strong>\r\n          <nav id=\"TableOfContents\">\r\n            <ul>\r\n              <li><a href=\"#mounting\">Mounting</a>\r\n                <ul>\r\n                  <li><a href=\"#constructor\">constructor()</a></li>\r\n                  <li><a href=\"#componentDidMount\">componentDidMount()</a></li>\r\n                </ul>\r\n              </li>\r\n              <li><a href=\"#updating\">updating</a>\r\n                <ul>\r\n                  <li><a href=\"#componentDidUpdate\">componentDidUpdate()</a></li>\r\n                </ul>\r\n              </li>\r\n              <li><a href=\"#unmounting\">unmounting</a>\r\n                <ul>\r\n                  <li><a href=\"#componentWillUnmount\">componentWillUnmount()</a></li>\r\n                </ul>\r\n              </li>\r\n              {/* <li><a href=\"#example-with-list-group\">Example with list-group</a></li>\r\n              <li><a href=\"#usage\">Usage</a>\r\n                <ul>\r\n                  <li><a href=\"#via-data-attributes\">Via data attributes</a></li>\r\n                  <li><a href=\"#via-javascript\">Via JavaScript</a></li>\r\n                  <li><a href=\"#methods\">Methods</a>\r\n                    <ul>\r\n                      <li><a href=\"#refresh\">refresh</a></li>\r\n                      <li><a href=\"#dispose\">dispose</a></li>\r\n                      <li><a href=\"#getinstance\">getInstance</a></li>\r\n                    </ul>\r\n                  </li>\r\n                  <li><a href=\"#options\">Options</a></li>\r\n                  <li><a href=\"#events\">Events</a></li>\r\n                </ul>\r\n              </li> */}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n\r\n        <div className=\"bd-content ps-lg-4\">\r\n          <h2 id=\"mounting\">Mounting<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#mounting\"></a></h2>\r\n          <p>컴포넌트의 인스턴스가 생성되어 DOM 상에 삽입될 때에 순서대로 호출</p>\r\n          <ul>\r\n            <li>constructor()</li>\r\n            <li>getDerivedStateFromProps()</li>\r\n            <li><code>render()</code></li>\r\n            <li>componentDidMount()</li>\r\n          </ul>\r\n          <h2 id=\"updating\">Updating<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#updating\"></a></h2>\r\n          <p>props 또는 state가 변경되면 갱신이 발생</p>\r\n          <ul>\r\n            <li>getDerivedStateFromProps()</li>\r\n            <li>shouldComponentUpdate()</li>\r\n            <li><code>render()</code></li>\r\n            <li>getSnapshotBeforeUpdate()</li>\r\n            <li>componentDidUpdate()</li>\r\n          </ul>\r\n          <h2 id=\"unmounting\">Unmounting<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#unmounting\"></a></h2>\r\n          <p>컴포넌트가 DOM 상에서 제거될 때에 호출</p>\r\n          <ul>\r\n            <li>componentWillUnmount()</li>\r\n          </ul>\r\n\r\n          <h3 id=\"constructor\">constructor()<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#constructor\"></a></h3>\r\n          <Code code={code1} language=\"javascript\" />\r\n          <p><strong>메서드를 바인딩하거나 state를 초기화하는 작업이 없다면, 해당 React 컴포넌트에는 생성자를 구현하지 않아도 됩니다.</strong></p>\r\n          <p>React 컴포넌트의 생성자는 해당 컴포넌트가 마운트되기 전에 호출됩니다. <span style={wellowHighlight}>React.Component</span>를 상속한 컴포넌트의 생성자를 구현할 때에는 다른 구문에 앞서<span style={wellowHighlight}> super(props)</span>를 호출해야 합니다. 그렇지 않으면 <span style={wellowHighlight}>this.props</span>가 생성자 내에서 정의되지 않아 버그로 이어질 수 있습니다.</p>\r\n          <p>React에서 생성자는 보통 아래의 두 가지 목적을 위하여 사용됩니다</p>\r\n          <ul>\r\n          <li>this.state에 객체를 할당하여 지역 state를 초기화</li>\r\n          <li>인스턴스에 이벤트 처리 메서드를 바인딩</li>\r\n          </ul>\r\n          <p><span style={wellowHighlight}>constructor() </span>내부에서<strong> setState()를 호출하면 안 됩니다.</strong> 컴포넌트에 지역 state가 필요하다면 생성자 내에서 <span style={wellowHighlight}>this.state</span>에 초기 state 값을 할당하면 됩니다.</p>\r\n          <Code code={code2} language=\"javascript\" />\r\n          <p>생성자는 <span style={wellowHighlight}>this.state</span>를 직접 할당할 수 있는 유일한 곳입니다. 그 외의 메서드에서는<span style={wellowHighlight}> this.setState()</span>를 사용해야 합니다.</p>\r\n          <p>생성자 내에서는 부수 효과를 발생시키거나 구독 작업(subscription)을 수행하면 안 됩니다. 해당 경우에는 <span style={wellowHighlight}>componentDidMount()</span>를 대신 사용하세요.</p>\r\n          <p></p>\r\n          <p><strong>주의</strong></p>\r\n          <p><strong>state에 props를 복사하면 안 됩니다! 가장 흔히 범하는 실수 중 하나입니다.</strong></p>\r\n          <Code code={code3} language=\"javascript\" />\r\n          <p>이것은 불필요한 작업이며(<span style={wellowHighlight}>this.props.color</span>를 직접 사용하면 됩니다), 버그를 발생시킵니다(<span style={wellowHighlight}>color</span> props의 값이 변하더라도 state에 반영되지 않습니다).</p>\r\n          <p></p>\r\n          <p><strong>props의 갱신을 의도적으로 무시해야 할 때만 이와 같은 패턴을 사용하기 바랍니다.</strong> 이 경우, 해당 props의 이름을<span style={wellowHighlight}> initialColor</span> 또는 <span style={wellowHighlight}>defaultColor</span> 등으로 변경하는 편이 자연스럽습니다. 그러면 이후 필요에 따라 컴포넌트가 key를 변경하여 초기 state를 “재설정”하도록 강제할 수 있습니다.</p>\r\n          <p></p>\r\n          <h3 id=\"componentDidMount\">componentDidMount()<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#componentDidMount\"></a></h3>\r\n          <Code code={code4} language=\"javascript\" />\r\n          <p><span style={wellowHighlight}>componentDidMount()</span>\r\n          는 컴포넌트가 마운트된 직후, 즉 트리에 삽입된 직후에 호출됩니다. DOM 노드가 있어야 하는 초기화 작업은 이 메서드에서 이루어지면 됩니다.\r\n          외부에서 데이터를 불러와야 한다면, 네트워크 요청을 보내기 적절한 위치입니다.</p>\r\n          <p>이 메서드는 데이터 구독을 설정하기 좋은 위치입니다. 데이터 구독이 이루어졌다면,\r\n          <span style={wellowHighlight}>componentWillUnmount()</span>에서 구독 해제 작업을 반드시 수행하기 바랍니다.</p>\r\n          <p><span style={wellowHighlight}>componentDidMount()</span>에서 <strong>즉시 setState()를 호출하는 경우도</strong> 있습니다.\r\n          이로 인하여 추가적인 렌더링이 발생하지만, 브라우저가 화면을 갱신하기 전에 이루어질 것입니다. 이 경우 <span style={wellowHighlight}>render()</span>가 두 번 호출되지만, \r\n          사용자는 그 중간 과정을 볼 수 없을 것입니다. 이런 사용 방식은 성능 문제로 이어지기 쉬우므로 주의가 필요합니다. 대부분의 경우, 앞의 방식을 대신하여 \r\n          <span style={wellowHighlight}>constructor()</span> 메서드에서 초기 state를 할당할 수 있습니다.\r\n           하지만 모달(Modal) 또는 툴팁과 같이 렌더링에 앞서 DOM 노드의 크기나 위치를 먼저 측정해야 하는 경우 이러한 방식이 필요할 수 있습니다.</p>\r\n           <h3 id=\"componentDidUpdate\">componentDidUpdate()<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#componentDidUpdate\"></a></h3>\r\n           <Code code={code5} language=\"javascript\" />\r\n           <p><span style={wellowHighlight}>componentDidUpdate()</span>는 갱신이 일어난 직후에 호출됩니다. 이 메서드는 최초 렌더링에서는 호출되지 않습니다.</p>\r\n            <p>컴포넌트가 갱신되었을 때 DOM을 조작하기 위하여 이 메서드를 활용하면 좋습니다. 또한, 이전과 현재의 props를 비교하여 네트워크 요청을 보내는 작업도 이 메서드에서 이루어지면 됩니다 (가령, props가 변하지 않았다면 네트워크 요청을 보낼 필요가 없습니다).</p>\r\n\r\n           <Code code={code6} language=\"javascript\" />\r\n           <p><strong>주의</strong></p>\r\n          <p><span style={wellowHighlight}>componentDidUpdate()</span>는 <ins>shouldComponentUpdate()</ins>가 false를 반환하면 호출되지 않습니다.</p>\r\n          <h3 id=\"componentWillUnmount\">componentWillUnmount()<a className=\"anchorjs-link \" aria-label=\"Anchor\" data-anchorjs-icon=\"#\" href=\"#componentWillUnmount\"></a></h3>\r\n          <Code code={code7} language=\"javascript\" />\r\n          <p><span style={wellowHighlight}>componentWillUnmount()</span>는 컴포넌트가 마운트 해제되어 제거되기 직전에 호출됩니다. 이 메서드 내에서 타이머 제거, 네트워크 요청 취소,\r\n          <span style={wellowHighlight}>componentDidMount()</span> 내에서 생성된 구독 해제 등 필요한 모든 정리 작업을 수행하세요.</p>\r\n          <p>이제 컴포넌트는 다시 렌더링되지 않으므로, <span style={wellowHighlight}>componentWillUnmount()</span> 내에서 <strong>setState()를 호출하면 안 됩니다.</strong>\r\n          컴포넌트 인스턴스가 마운트 해제되고 나면, 절대로 다시 마운트되지 않습니다.</p>\r\n\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default LifeCycle;","import React from 'react';\r\nimport Code from '../../../lib/code/PrismCode';\r\n\r\nconst html = ``;\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '100vh',\r\n  float: 'right',\r\n  backgroundColor: '#f1f1f1',\r\n  padding: '20px'\r\n}\r\nconst ReactEvent = () => {\r\n  const code1 = `class Robot extends React.Component {\r\n    render(){\r\n      return (\r\n        <button onClick={this.doAction}>Action!</button>\r\n      )\r\n    }\r\n    doAction(){\r\n      alert(\"ok\");\r\n    }\r\n  }\r\n  \r\n  ReactDOM.render(<Robot />, document.getElementById(\"root\"));`;\r\n  const code2 = `doAction = () => {\r\n    alert(this);\r\n  }\r\n  constructor(props) {\r\n    super(props)\r\n    this.doAction = this.doAction.bind(this)\t// constructor 에서 bind 함.\r\n  }\r\n    \r\n  doAction() {\r\n    alert(this);\r\n  }`;\r\n  const code3 = `class Robot extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n    }\r\n    render(){\r\n      return (\r\n        <button onClick={() => this.doAction(\"run\") }>Action!</button>\r\n      )\r\n    }\r\n    doAction = (action)=>{\r\n      alert(this.props.def_action + \" -> \" + action);\r\n    }\r\n  }\r\n  \r\n  ReactDOM.render(<Robot def_action=\"walk\" />, document.getElementById(\"root\"));`;\r\n  const code4 = ` render(){\r\n    return (\r\n      <button onClick={this.doAction.bind(this, \"run\") }>Action!</button>\r\n    )\r\n  }\r\n <button onClick={this.doAction.bind(this, \"run\") }>Action!</button> // 버튼클릭 시 작동\r\n <button onClick={this.doAction(this, \"run\") }>Action!</button>      // 페이지 load 시 작동`;\r\n const code5 = `class Robot extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  render(){\r\n    return (\r\n      <button onClick={this.doAction.bind(this, \"run\") }>Action!</button>\r\n    )\r\n  }\r\n  doAction = (action, lastParamIsEventObject)=>{\r\n    alert(this.props.def_action + \" -> \" + action + \" : \" + lastParamIsEventObject.type);\r\n  }\r\n}\r\n\r\nReactDOM.render(<Robot def_action=\"walk\" />, document.getElementById(\"root\"));`;\r\nconst code6 = `render(){\r\n  return (\r\n    <button onClick={(evnt)=>this.doAction(\"run\", evnt) }>Action!</button>\r\n  )\r\n}`;\r\n  return (\r\n    <div style={{padding: '20px'}} className=\"container\">\r\n      <div dangerouslySetInnerHTML ={{__html: html}} />\r\n      <p><strong>기본적인 이벤트 사용</strong></p>\r\n      <Code code={code1} language=\"javascript\" />\r\n\r\n      <p><strong>doAction  안에서 this 를 Bind 하고 싶을 때.</strong></p>\r\n      <Code code={code2} language=\"javascript\" />\r\n\r\n      <p><strong>파라메터 전송</strong></p>\r\n      <p>1. 이벤트를 arrow function&nbsp;</p>\r\n      <Code code={code3} language=\"javascript\" />\r\n      <p>2. 이벤트에서 bind</p>\r\n      <Code code={code4} language=\"javascript\" />\r\n\r\n      <p><strong>Event Object </strong></p>\r\n      <Code code={code5} language=\"javascript\" />\r\n      <p>명시적</p>\r\n      <Code code={code6} language=\"javascript\" />\r\n    </div>\r\n  );\r\n\r\n};\r\nexport default ReactEvent;","import React from \"react\";\r\n\r\nconst Intro = (props) => {\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: '100vh',\r\n    float: 'right',\r\n    backgroundColor: '#f1f1f1',\r\n    padding: '20px'\r\n  }\r\n  return (\r\n    <div style={containerStyle} className=\"overflow-auto\">\r\n      \r\n    </div>\r\n  );\r\n}\r\nexport default Intro;\r\n","import React, { Component } from 'react';\r\nimport './resume.css';\r\nimport axios from 'axios';\r\n// import { reset } from 'axe-core';\r\nrequire('dotenv').config();\r\n\r\nclass Resume extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state  = {\r\n      password: '', // 첫번째 패스워드\r\n      rePassword: '', // 두번째 패스워드\r\n      pMessage:'패스워드를 입력하세요.', // 확인 메시지 (패스워드 일치여부를 사용자에게 알려주는 메시지)\r\n      show: false,\r\n      blindStyle: {\r\n        width:'100%'\r\n      },\r\n      hello : '',\r\n      isShowContent: false,\r\n      contentsEl: '',\r\n    };  // 초기 state값을 셋팅해준다. 빈 스트링 값은 false를 뜻한다.\r\n  }\r\n  componentDidMount() {\r\n    this._getHello();\r\n  }\r\n\r\n  _getHello = async() => {\r\n    const res = await axios.get('/api/testlist');\r\n    console.log('_getHello--', res)\r\n    // this.setState({ hello : res.data.hello })\r\n  }\r\n  contentsEl =  () => {\r\n    const cardStyle = {\r\n      borderLeft: '0px',\r\n      borderRight: '0px',\r\n    }\r\n    const borderNone = {\r\n      border: 'none'\r\n    }\r\n    const alignCenter = {\r\n      textAlign: 'center',\r\n      verticalAlign: 'middle'\r\n    }\r\n    const theadStyle = {\r\n      borderBottom: '1px'\r\n    }\r\n    return (\r\n      <div class=\"container\">\r\n      <div class=\"card\" style={cardStyle}>\r\n        <div class=\"row g-0\">\r\n          <div class=\"col-md-2\">\r\n            <div className=\"card-body\">\r\n              {/* <h5 class=\"card-title\">Work Experience(technical)</h5> */}\r\n              <h5 class=\"card-title\">Skills</h5>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-10\">\r\n            <div class=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"resume\">\r\n    \r\n              <table className=\"table table-responsive align-middle table-bordered\">\r\n                <thead style={theadStyle}>\r\n                  <tr className=\"align-items-center\" style={alignCenter}>\r\n                    <th rowSpan=\"2\" scope=\"col\">Project</th>\r\n                    <th rowSpan=\"2\" scope=\"col\">Experience</th>\r\n                    <th colSpan=\"3\" scope=\"colgroup\" style={borderNone}>development</th>\r\n                  </tr>\r\n                  <tr style={alignCenter}>\r\n                    <th scope=\"col\">Tool</th>\r\n                    <th scope=\"col\">DBMS</th>\r\n                    <th scope=\"col\">WAS</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n               \r\n                  <tr>\r\n                    <td>도로 시설물 재난관리 재난 관리체계 구축</td>\r\n                    <td>2011.08~2012.12</td>\r\n                    <td>Java, jQuery, JSP, HTML, Spring Framework</td>\r\n                    <td>Oracle</td>\r\n                    <td>tomcat,jeus</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>LG하우시스 대리점시스템 운영</td>\r\n                    <td>2013.01~2014.05</td>\r\n                    <td>JAVA, JSP/Jstl, HTML, jQuery, JavaScript, Stored Procedure, json</td>\r\n                    <td>Oracle</td>\r\n                    <td>Tomcat, WebSphere</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>LG하우시스 직영점시스템 구축</td>\r\n                    <td>2014.05 ~2014.07</td>\r\n                    <td>Java, XML, DevOn, Miplatform</td>\r\n                    <td>Oracle</td>\r\n                    <td>tomcat</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>국민권익위원회 행정심판 허브 시스템 구축</td>\r\n                    <td>2014.09~2014.12</td>\r\n                    <td>Java,JQuery,JavaScript,Ajax, Spring framework</td>\r\n                    <td>Oracle</td>\r\n                    <td>Tomcat,JBOSS</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>저작권 통합 관리 시스템 운영</td>\r\n                    <td>2015.02~2015.06</td>\r\n                    <td>Java, XML, Spring framework, Miplatform</td>\r\n                    <td>Oracle</td>\r\n                    <td>Tomcat,jeus</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>사회보장정보시스템 고도화</td>\r\n                    <td>2015.06~2015.09</td>\r\n                    <td>Java, XML, anyframe, Miplatform, egov</td>\r\n                    <td>Oracle</td>\r\n                    <td>Tomcat,jeus</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>대검찰청 업무시스템 Kics 고도화</td>\r\n                    <td>2015.09~2015.12</td>\r\n                    <td>Java, XML, EJB, Trustform,laf/j</td>\r\n                    <td>Oracle</td>\r\n                    <td>Tomcat,jeus</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Acubed 반도체 장비 분석 차트 시스템 프론트엔드 개발</td>\r\n                    <td>2016.01~2017.03</td>\r\n                    <td>AngularJS, AngularJS2, Typescript, Javascript, npm, node.js, jQuery, css, html5, c3js, d3js, , Wijmo5,unserscreJS, Spring framework</td>\r\n                    <td>Oracle</td>\r\n                    <td>Tomcat</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>MIPlatform 반도체 장비 분석 차트 시스템 프론트엔드 개발</td>\r\n                    <td>2017.03~2017.09</td>\r\n                    <td>AngularJS2, AngularJS4, Typescript, Javascript, npm, node.js, rxJS, jQuery, c3js, d3js, css, html5 unserscreJS, Wijmo5</td>\r\n                    <td>Oracle</td>\r\n                    <td>Tomcat</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>AP Mall CX 리뉴얼</td>\r\n                    <td>2017.09~2017.12</td>\r\n                    <td>Java, JQuery, JavaScript, jsp, Jstl, xml. Ajax, SiteMesh, Spring framework</td>\r\n                    <td>Oracle</td>\r\n                    <td>Tomcat</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>onstove 게임 플랫폼 개발 및 운영 유지보수</td>\r\n                    <td>2018.02~2018.12</td>\r\n                    <td>Vue, ES6, Javascript, npm, node.js, jQuery, css, html5, lodash</td>\r\n                    <td>Oracle</td>\r\n                    <td>Tomcat</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Edge&Next 클라우드 HIS 솔루션 개발 </td>\r\n                    <td>2019.01~2021.07</td>\r\n                    <td>Ember.js, ES6, javascript, yarn, nodejs, jQuery</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                  </tr>\r\n                \r\n                </tbody>\r\n              </table>\r\n              </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card\" style={cardStyle}>\r\n        <div class=\"row g-0\">\r\n          <div class=\"col-md-2\">\r\n          <div className=\"card-body\">\r\n            <h5 class=\"card-title\">Education</h5>\r\n          </div>\r\n          </div>\r\n          <div class=\"col-md-10\">\r\n            <div class=\"card-body\">\r\n              <p class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n              {/* <p class=\"card-text\"><small class=\"text-muted\">Last updated 3 mins ago</small></p> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  handleConfirmPassword = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n    if (e.target.value !== process.env.REACT_APP_CONTENTS_PASSWORD) {\r\n      this.setState({\r\n        pMessage: \"패스워드가 일치하지 않습니다.\",\r\n        // password: '',\r\n      }) //사용자가 입력한 값이 재확인 비번과 일치하지 않을 경우\r\n    } else {\r\n      this.setState({\r\n        blindStyle: {\r\n          width:'0%',\r\n        },\r\n        contentsEl: this.contentsEl()\r\n        // password: '',\r\n      }) //사용자가 입력한 값이 재확인 비번과 일치하지 않을 경우\r\n\r\n    }\r\n    console.log('password--', this.state.password);\r\n  }\r\n  render() {\r\n\r\n    const bilndInputStyle = {\r\n      width: '30%',\r\n      display: 'inline-block'\r\n    }\r\n    if(this.state.isShowContent) {\r\n\r\n    }\r\n\r\n      return (\r\n        <div style={{padding: '20px'}}>\r\n        <div id=\"myNav\" className=\"overlay\" style={this.state.blindStyle}>\r\n          <div className=\"overlay-content\">\r\n          <input type=\"password\" name=\"password\" className=\"form-control\" \r\n              style={bilndInputStyle}\r\n              value={this.state.password}\r\n              onChange={this.handleConfirmPassword} />\r\n              <span className=\"message-p mt-2 fs-4\">{this.state.pMessage}</span>\r\n          </div>\r\n        </div>\r\n        {this.state.contentsEl}\r\n          </div>\r\n      );\r\n  }\r\n\r\n};\r\n\r\nexport default Resume;","import React, { Component } from \"react\";\r\nimport {isEmpty} from 'lodash';\r\nimport { Main } from \"../../pages\";\r\n\r\nexport class ContentsDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log('ContentsDetail props:::', props);\r\n    this.state = {\r\n      contentType: '',\r\n      viewContent: '',\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let viewContent = '';\r\n    if(this.props.location.pathname === '/') {\r\n      viewContent = <Main props={this.props} />\r\n    }\r\n    this.setState({\r\n      viewContent: viewContent\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"content-container\">{this.state.viewContent}</div>;\r\n  }\r\n}\r\n\r\nexport default ContentsDetail;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as authActions from \"../../redux/modules/auth\";\r\nimport * as userActions from \"../../redux/modules/users\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport storage from \"../lib/storage\";\r\nimport {isEmpty} from 'lodash';\r\nimport ContentsDetail from \"./ContentsDetail\";\r\n\r\nexport class ContentsContainer extends Component {\r\n  componentDidMount() {\r\n    this.checkUser();\r\n    this.getIp();\r\n  }\r\n\r\n  checkUser = () => {\r\n    console.log('AuthContainer props', this.props)\r\n    if (!this.props.logged && !isEmpty(storage.get('loggedInfo'))) {\r\n      this.props.setUserInfo(storage.get('loggedInfo'));\r\n      this.props.history.push(\"/\");\r\n      return;\r\n    }\r\n    if (this.props.logged && !isEmpty(storage.get('loggedInfo'))) {\r\n      this.props.history.push(\"/\");\r\n      return;\r\n    }\r\n  \r\n    // 만약 userInfo값이 localStorage에 없을때에는, api통신을 실시.\r\n    // checkUser();\r\n\r\n    // 만약 checkUser가 실패 했다면, logged는 false로 바뀌므로, 로그인 페이지로 이동시킨다.\r\n    // 또한, /auth/register에서는 /auth/login으로 이동할 필요가 없으므로, auth라는 path가 url에 포함될때는 제외시킨다\r\n    if (!this.props.logged && !window.location.pathname.includes(\"auth\")) {\r\n      this.props.history.push(\"/auth/login\");\r\n    }\r\n  };\r\n  getIp = () => {\r\n    if(isEmpty(this.props.ipInfo)) {\r\n      this.props.getIpInfo();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n//*******connect 한 컴포넌트에서 props 로 내려 받을 수 있다.\r\nconst mapStateToProps = state => ({\r\n  logged: state.users.logged,\r\n  userInfo: state.users.userInfo,\r\n  ipInfo: state.users.ipInfo,\r\n  provideInfo: state.users.provideInfo\r\n});\r\n//dispatch({type: 'reset', payload: initialCount}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // checkUser: () => {\r\n    //   dispatch(authActions.checkUser());\r\n    // },\r\n    userCheck: (params) => {\r\n      dispatch(userActions.actionCreators.getProvideUserCheck(params));\r\n    },\r\n    setUserInfo: (info) => {\r\n      dispatch(userActions.actionCreators.setUserInfo(info));\r\n    },\r\n    getIpInfo: (info) => {\r\n      dispatch(userActions.actionCreators.getIpInfo(info));\r\n    },\r\n    setUserTemp: ({ id, username }) => {\r\n      dispatch(authActions.setUserTemp({ id, username }));\r\n    }\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ContentsDetail)\r\n);\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { toast } from \"react-toastify\";\r\nimport { isEmpty } from 'lodash';\r\n\r\nclass AdminContents extends Component {\r\n  constructor(props) {\r\n    console.log('AdminContents props--', props);\r\n    super(props);\r\n    this.state  = {\r\n      category1: [],\r\n      category2: [],\r\n      category3: [],\r\n      pNode1: '',\r\n      pNode2: '',\r\n      pNode3: '',\r\n      categoryName1: '',\r\n      categoryName2: '',\r\n      categoryName3: '',\r\n      categoryCd1: '',\r\n      categoryCd2: '',\r\n      categoryCd3: '',\r\n      categoryUse1: '',\r\n      categoryUse2: '',\r\n      categoryUse3: '',\r\n      classes: '',\r\n    };\r\n    this.classes = null;\r\n    this._handleChange = this._handleChange.bind(this)\r\n    this.textHandleChange = this.textHandleChange.bind(this);\r\n    this.onAddClick = this.onAddClick.bind(this);\r\n    this.onModifyClick = this.onModifyClick.bind(this);\r\n    this.onDeleteClick = this.onDeleteClick.bind(this);\r\n    this.radioHandleChange = this.radioHandleChange.bind(this);\r\n }\r\n  componentDidMount() {\r\n    this.setState({\r\n      classes: makeStyles((theme) => ({\r\n        formControl: {\r\n          margin: theme.spacing(1),\r\n          minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n          marginTop: theme.spacing(2),\r\n          minWidth: 120,\r\n        },\r\n      })),\r\n    })\r\n    // this.classes = this.useStyles();\r\n    this._getCategory();\r\n  }\r\n  useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  _fieldReset() {\r\n    this.setState({\r\n      category1: [],\r\n      category2: [],\r\n      category3: [],\r\n      pNode1: '',\r\n      pNode2: '',\r\n      pNode3: '',\r\n      categoryCd1: '',\r\n      categoryCd2: '',\r\n      categoryCd3: '',\r\n      categoryName1: '',\r\n      categoryName2: '',\r\n      categoryName3: '',\r\n      categoryUse1: '',\r\n      categoryUse2: '',\r\n      categoryUse3: '',\r\n    })\r\n  }\r\n  \r\n  async _getCategory () {\r\n    try {\r\n      const res = await axios.get(`/api/category-group`);\r\n      this.setState({\r\n        category1: res.data.result\r\n      })\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  _handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n    if(event.target.name !== 'pNode3') {\r\n      this._getSubCategory(event.target.value);\r\n    }\r\n    this._setFieldValue(event.target.name, event.target.value);\r\n  }\r\n  textHandleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n  radioHandleChange =  (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n  _setFieldValue(name, value) {\r\n    let targetItem = null;\r\n    let targetList = null;\r\n    let targetCode = null;\r\n    let targetNm = null;\r\n    let targetInputNm = null;\r\n    if (name === 'pNode1') {\r\n      targetList = this.state.category1;\r\n      targetNm = 'categoryUse1';\r\n      targetCode = 'categoryCd1';\r\n      targetInputNm = 'categoryName1';\r\n    } else if (name === 'pNode2') {\r\n      targetList = this.state.category2;\r\n      targetNm = 'categoryUse2';\r\n      targetCode = 'categoryCd2';\r\n      targetInputNm = 'categoryName2';\r\n    } else if (name === 'pNode3') {\r\n      targetList = this.state.category3;\r\n      targetNm = 'categoryUse3';\r\n      targetCode = 'categoryCd3';\r\n      targetInputNm = 'categoryName3';\r\n    }\r\n    targetItem = targetList.find(d => d.node_id === value);\r\n    this.setState({\r\n      [targetNm]: targetItem.use_yn,\r\n      [targetInputNm]: targetItem.node_nm,\r\n      [targetCode]: targetItem.node_code,\r\n    })\r\n  }\r\n \r\n  async _getSubCategory (pNodeId) {\r\n    try {\r\n      const res = await axios.get(`/api/category-sub-group?pNodeId=${pNodeId}`);\r\n      if(!isEmpty(res.data.result)) {\r\n        if(res.data.result[0].depth === 1) {\r\n          this.setState({\r\n            category2: res.data.result,\r\n          })\r\n        } else {\r\n          this.setState({\r\n            category3: res.data.result\r\n          })\r\n        }\r\n      }\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  onAddClick = (event) => {\r\n    this._registCategoryGroup(event.currentTarget.name);\r\n  }\r\n  onModifyClick = (event) => {\r\n    this._updateCategoryGroup(event.currentTarget.name);\r\n  }\r\n  onDeleteClick = (event) => {\r\n    // this._registCategoryGroup(event.currentTarget.name);\r\n  }\r\n  async _registCategoryGroup(type) {\r\n    try {\r\n      let pNodeId = 0;\r\n      let nodeCode = this.state.categoryCd1;\r\n      let nodeName = this.state.categoryName1;\r\n      let nodePath =  this.state.categoryName1;\r\n      let useYN =  this.state.categoryUse1;\r\n      let depth = 0;\r\n      if (type === 'category2') {\r\n        pNodeId = this.state.pNode1;\r\n        nodeCode = this.state.categoryCd2;\r\n        nodeName = this.state.categoryName2;\r\n        useYN =  this.state.categoryUse2;\r\n        nodePath = ``;\r\n        depth = 1;\r\n      } else if (type === 'category3') {\r\n        pNodeId = this.state.pNode2;\r\n        nodeCode = this.state.categoryCd3;\r\n        nodeName = this.state.categoryName3;\r\n        useYN =  this.state.categoryUse3;\r\n        nodePath = ``;\r\n        depth = 2;\r\n      }\r\n      if(isEmpty(nodeName) || pNodeId === \"\") {\r\n        toast.error('Empty Data')\r\n        return;\r\n      }\r\n      const params = {\r\n        pNodeId,\r\n        nodeCode,\r\n        nodeName,\r\n        nodePath,\r\n        depth,\r\n        useYN\r\n      }\r\n      await axios.post('/api/regist-category', params);\r\n      await axios.post('/api/update-sub-yn', {pNodeId, subYN: 'Y'});\r\n      this._fieldReset();\r\n      this._getCategory();\r\n      toast.success('저장되었습니다.')\r\n\r\n    } catch(e) {\r\n      toast.error('저장실패');\r\n      console.log(e)\r\n    }\r\n\r\n  }\r\n  async _updateCategoryGroup(type) {\r\n    try {\r\n      let nodeId = this.state.pNode1;\r\n      let nodeCode = this.state.categoryCd1;\r\n      let nodeName = this.state.categoryName1;\r\n      let useYN =  this.state.categoryUse1;\r\n      if (type === 'category2') {\r\n        nodeId = this.state.pNode2;\r\n        nodeCode = this.state.categoryCd2;\r\n        nodeName = this.state.categoryName2;\r\n        useYN =  this.state.categoryUse2;\r\n      } else if (type === 'category3') {\r\n        nodeId = this.state.pNode3;\r\n        nodeCode = this.state.categoryCd3;\r\n        nodeName = this.state.categoryName3;\r\n        useYN =  this.state.categoryUse3;\r\n      }\r\n      await axios.post('/api/modify-category', {nodeId, nodeCode, nodeName, useYN});\r\n      toast.success('저장되었습니다.')\r\n\r\n    } catch(e) {\r\n      toast.error('저장실패');\r\n      console.log(e)\r\n    }\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FormControl className={this.state.classes.formControl} style={{marginRight: '20px'}}>\r\n          <InputLabel id=\"pNode1\">Category1</InputLabel>\r\n          <Select\r\n            labelId=\"pNode1\"\r\n            id=\"pNode1\"\r\n            name=\"pNode1\"\r\n            value={this.state.pNode1}\r\n            onChange={this._handleChange}\r\n          >\r\n            {this.state.category1.map((item) => \r\n              <MenuItem key={item.node_id} value={item.node_id}>\r\n              {item.node_nm}\r\n            </MenuItem>\r\n            )}\r\n          </Select>\r\n          <TextField\r\n            label=\"메뉴구분 코드\"\r\n            name=\"categoryCd1\"\r\n            value={this.state.categoryCd1}\r\n            onChange={this.textHandleChange} />\r\n          <TextField\r\n            label=\"메뉴구분명\"\r\n            name=\"categoryName1\"\r\n            value={this.state.categoryName1}\r\n            onChange={this.textHandleChange} />\r\n          <RadioGroup row aria-label=\"사용여부\" name=\"categoryUse1\" value={this.state.categoryUse1} onChange={this.radioHandleChange}>\r\n            <FormControlLabel value=\"Y\" control={<Radio color=\"primary\" />} label=\"사용\" />\r\n            <FormControlLabel value=\"N\" control={<Radio color=\"primary\" />} label=\"미사용\" />\r\n          </RadioGroup>\r\n          <Button name=\"category1\" onClick={this.onAddClick}>Add</Button>\r\n          <Button name=\"category1\" onClick={this.onModifyClick}>Modify</Button>\r\n          <Button name=\"category1\" onClick={this.onDeleteClick}>Delete</Button>\r\n        </FormControl>\r\n        <FormControl className={this.state.classes.formControl} style={{marginRight: '20px'}}>\r\n          <InputLabel id=\"pNode2\">Category2</InputLabel>\r\n          <Select\r\n            labelId=\"pNode2\"\r\n            id=\"pNode2\"\r\n            name=\"pNode2\"\r\n            value={this.state.pNode2}\r\n            onChange={this._handleChange}\r\n          >\r\n            {this.state.category2.map((item) => \r\n              <MenuItem key={item.node_id} value={item.node_id}>\r\n                {item.node_nm}\r\n              </MenuItem>\r\n            )}\r\n          </Select>\r\n          <TextField\r\n            label=\"메뉴코드1depth\"\r\n            name=\"categoryCd2\"\r\n            value={this.state.categoryCd2}\r\n            onChange={this.textHandleChange} />\r\n          <TextField\r\n            label=\"메뉴명1depth\"\r\n            name=\"categoryName2\"\r\n            value={this.state.categoryName2}\r\n            onChange={this.textHandleChange} />\r\n          <RadioGroup row aria-label=\"사용여부\" name=\"categoryUse2\" value={this.state.categoryUse2} onChange={this.radioHandleChange}>\r\n            <FormControlLabel value=\"Y\" control={<Radio color=\"primary\" />} label=\"사용\" />\r\n            <FormControlLabel value=\"N\" control={<Radio color=\"primary\" />} label=\"미사용\" />\r\n          </RadioGroup>\r\n          <Button name=\"category2\" onClick={this.onAddClick}>Add</Button>\r\n          <Button name=\"category2\" onClick={this.onModifyClick}>Modify</Button>\r\n          <Button name=\"category2\" onClick={this.onDeleteClick}>Delete</Button>\r\n        </FormControl>\r\n        <FormControl className={this.state.classes.formControl}>\r\n          <InputLabel id=\"pNode3\">Category3</InputLabel>\r\n          <Select\r\n            labelId=\"pNode3\"\r\n            id=\"pNode3\"\r\n            name=\"pNode3\"\r\n            value={this.state.pNode3}\r\n            onChange={this._handleChange}\r\n          >\r\n            {this.state.category3.map((item) => \r\n              <MenuItem key={item.node_id} value={item.node_id}>\r\n              {item.node_nm}\r\n            </MenuItem>\r\n            )}\r\n          </Select>\r\n          <TextField\r\n            label=\"메뉴코드2depth\"\r\n            name=\"categoryCd3\"\r\n            value={this.state.categoryCd3}\r\n            onChange={this.textHandleChange} />\r\n          <TextField\r\n            label=\"메뉴2depth\"\r\n            name=\"categoryName3\"\r\n            value={this.state.categoryName3}\r\n            onChange={this.textHandleChange} />\r\n          <RadioGroup row aria-label=\"사용여부\" name=\"categoryUse3\" value={this.state.categoryUse3} onChange={this.radioHandleChange}>\r\n            <FormControlLabel value=\"Y\" control={<Radio color=\"primary\" />} label=\"사용\" />\r\n            <FormControlLabel value=\"N\" control={<Radio color=\"primary\" />} label=\"미사용\" />\r\n          </RadioGroup>\r\n          <Button name=\"category3\" onClick={this.onAddClick}>Add</Button>\r\n          <Button name=\"category3\" onClick={this.onModifyClick}>Modify</Button>\r\n          <Button name=\"category3\" onClick={this.onDeleteClick}>Delete</Button>\r\n        </FormControl>\r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\nexport default AdminContents;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as authActions from \"../../redux/modules/auth\";\r\nimport * as userActions from \"../../redux/modules/users\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport AdminContents from \"./AdminContents\";\r\n\r\nexport class AdminContainer extends Component {\r\n \r\n  componentDidMount() {\r\n    console.log('BaseContainer this.props', this.props)\r\n    this.checkUser();\r\n  }\r\n\r\n  checkUser = () => {\r\n    console.log('BaseContainer this.props', this.props)\r\n    const { setUserTemp, history } = this.props;\r\n\r\n    // 먼저 localStorage에 값이 저장되있는지 확인, userInfo값이 있다면, 로그인을 한것으로 인식하고,\r\n    // 바로 setUserTemp를 실시.\r\n    // 이를 하는 이유는 새로고침 했을시, state가 초기화 되어 logged값도 false로 바뀌는데, 새로고침 했을시\r\n    // // 로그인을 유지하기 위함.\r\n    console.log('localStorage.getItem(\"loggedInfo\")--', localStorage.getItem(\"loggedInfo\"));\r\n    if (localStorage.getItem(\"loggedInfo\")) {\r\n      const userInfo = JSON.parse(localStorage.getItem(\"loggedInfo\"));\r\n      setUserTemp({\r\n        id: userInfo.id,\r\n        username: userInfo.username,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // 만약 userInfo값이 localStorage에 없을때에는, api통신을 실시.\r\n    // checkUser();\r\n\r\n    // 만약 checkUser가 실패 했다면, logged는 false로 바뀌므로, 로그인 페이지로 이동시킨다.\r\n    // 또한, /auth/register에서는 /auth/login으로 이동할 필요가 없으므로, auth라는 path가 url에 포함될때는 제외시킨다\r\n    if (!this.props.logged && !window.location.pathname.includes(\"auth\")) {\r\n      // history.push(\"/auth/login\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n//*******connect 한 컴포넌트에서 props 로 내려 받을 수 있다.\r\nconst mapStateToProps = state => ({\r\n  logged: state.users.logged,\r\n  userInfo: state.users.userInfo,\r\n  ipInfo: state.users.ipInfo,\r\n  provideInfo: state.users.provideInfo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // checkUser: () => {\r\n    //   dispatch(authActions.checkUser());\r\n    // },\r\n    userCheck: (params) => {\r\n      dispatch(userActions.actionCreators.getProvideUserCheck(params));\r\n    },\r\n    setUserInfo: (info) => {\r\n      dispatch(userActions.actionCreators.setUserInfo(info));\r\n    },\r\n    setUserTemp: ({ id, username }) => {\r\n      dispatch(authActions.setUserTemp({ id, username }));\r\n    },\r\n    setProvideInfo: (info) => {\r\n\t\t\tdispatch({type: 'SET_PROVIDE_USER_CHECK', info})\r\n    }\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(AdminContents)\r\n);\r\n// const mapStateToProps = (state) => ({\r\n//   userInfo: state.userInfo\r\n// });\r\n  \r\n//   /*\r\n//   액션 생성 함수를 사용하여 액션을 생성하고,\r\n//   해당 액션을 dispatch하는 함수를 만든 후, 이를 props로 연결\r\n//   */\r\n//   const mapDispatchToProps = (dispatch) => ({\r\n//     setUserTemp: ({ id, username }) => {\r\n//       dispatch(authActions.setUserTemp({ id, username }));\r\n//     }\r\n//     // setUserInfo: (info) => {\r\n//     //   dispatch(authActions.setColor(info));\r\n//     // }\r\n//   });\r\n// const BaseContainer = connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n//   )(InputContents);\r\n  \r\n  // export default BaseContainer;","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport SimpleBar from \"simplebar\";\r\nimport * as _ from 'lodash';\r\nfunction MenuPostCategory(props) {\r\n  const {headerInfo, menuInfo, isMasterUser} = props;\r\n  if(!isMasterUser && (menuInfo.use_yn === 'N' || headerInfo.use_yn === 'N')) {\r\n    return null;\r\n  }\r\n  if(menuInfo.sub.length === 0) {\r\n    return  <NavLink to={`/posts?groupType=${menuInfo.node_code}`}\r\n    isActive={(match, location) => {\r\n      console.log('match, location', match, location)\r\n      if(location.search.indexOf(menuInfo.node_code) > -1) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }}\r\n    className=\"sidebar-item\" activeClassName=\"active\">\r\n      <li className=\"sidebar-link\">\r\n          <span className=\"align-middle\">{menuInfo.node_nm}</span>\r\n      </li>\r\n  </NavLink>\r\n  } else if(menuInfo.sub.length > 0){\r\n    return                             <li className=\"sidebar-item\">\r\n    <a data-bs-target={`#${headerInfo.node_code}`} data-bs-toggle=\"collapse\" className=\"sidebar-link collapsed\" aria-expanded=\"false\">\r\n      <span className=\"align-middle\">{menuInfo.node_nm} </span>\r\n    </a>\r\n    <ul id={headerInfo.node_code} className=\"sidebar-dropdown list-unstyled collapse\" data-bs-parent=\"#sidebar\">\r\n      {menuInfo.sub.map((sub, index) => \r\n          <SubCategory key={index} menuInfo={menuInfo} sub={sub} isMasterUser={isMasterUser} />\r\n                        // <NavLink key={index} to={{pathname:`/posts`, search:`?groupType=${sub.node_code}`, state:menuInfo.node_code}} \r\n        //   className=\"sidebar-item\"\r\n        //   isActive={(match, location) => {\r\n        //     console.log('match, location', match, location)\r\n        //     if(location.search.indexOf(sub.node_code) > -1) {\r\n        //       return true;\r\n        //     } else {\r\n        //       return false;\r\n        //     }\r\n        //   }}\r\n        //   > \r\n        //   <li className=\"sidebar-link\">\r\n        //     <span className=\"align-middle\">{sub.node_nm}</span>\r\n        //   </li>\r\n        // </NavLink>\r\n      )}\r\n    </ul>\r\n  </li>\r\n  }\r\n}\r\nfunction SubCategory(props) {\r\n  const { menuInfo, sub, isMasterUser} = props;\r\n  if(!isMasterUser && sub.use_yn === 'N') {\r\n    return null;\r\n  } else {\r\n    return  <NavLink to={{pathname:`/posts`, search:`?groupType=${sub.node_code}`, state:menuInfo.node_code}} \r\n      className=\"sidebar-item\"\r\n      isActive={(match, location) => {\r\n        console.log('match, location', match, location)\r\n        if(location.search.indexOf(sub.node_code) > -1) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }}\r\n      > \r\n    <li className=\"sidebar-link\">\r\n      <span className=\"align-middle\">{sub.node_nm}</span>\r\n    </li>\r\n  </NavLink>\r\n\r\n  }\r\n\r\n}\r\nfunction MenuSingleCategory(props) {\r\n  const {headerInfo, menuInfo, isMasterUser} = props;\r\n  if(!isMasterUser && (menuInfo.use_yn === 'N' || headerInfo.use_yn === 'N')) {\r\n    return null;\r\n  } else {\r\n    return <NavLink exact to={`/${menuInfo.node_code}`} className=\"sidebar-item\" activeClassName=\"active\"> \r\n    <li className=\"sidebar-link\">\r\n      <span className=\"align-middle\">{menuInfo.node_nm}</span>\r\n    </li>\r\n  </NavLink>\r\n  }\r\n}\r\nfunction MenuHeader(props) {\r\n  const {menuInfo, isMasterUser} = props;\r\n  if(!isMasterUser && menuInfo.use_yn === 'N') {\r\n    return null;\r\n  } else {\r\n    return  <li className=\"sidebar-header\">\r\n    {menuInfo.node_nm}\r\n  </li>\r\n  }\r\n\r\n}\r\nclass NavSidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state  = {\r\n      password: '', // 첫번째 비밀번호\r\n      rePassword: '', // 두번째 비밀번호\r\n      pMessage:'', // 확인 메시지 (비밀번호 일치여부를 사용자에게 알려주는 메시지)\r\n      show: false,\r\n      categoryList: [],\r\n    };  // 초기 state값을 셋팅해준다. 빈 스트링 값은 false를 뜻한다.\r\n  }\r\n  initialize = () => {\r\n    this.initializeSimplebar();\r\n    this.initializeSidebarCollapse();\r\n  }\r\n  \r\n  initializeSimplebar = () => {\r\n    const simplebarElement = document.getElementsByClassName(\"js-simplebar\")[0];\r\n  \r\n    if(simplebarElement){\r\n      const simplebarInstance = new SimpleBar(document.getElementsByClassName(\"js-simplebar\")[0]);\r\n  \r\n      /* Recalculate simplebar on sidebar dropdown toggle */\r\n      const sidebarDropdowns = document.querySelectorAll(\".js-sidebar [data-bs-parent]\");\r\n      \r\n      sidebarDropdowns.forEach(link => {\r\n        link.addEventListener(\"shown.bs.collapse\", () => {\r\n          simplebarInstance.recalculate();\r\n        });\r\n        link.addEventListener(\"hidden.bs.collapse\", () => {\r\n          simplebarInstance.recalculate();\r\n        });\r\n      });\r\n    }\r\n  }\r\n  \r\n  initializeSidebarCollapse = () => {\r\n    const sidebarElement = document.getElementsByClassName(\"js-sidebar\")[0];\r\n    const sidebarToggleElement = document.getElementsByClassName(\"js-sidebar-toggle\")[0];\r\n  \r\n    if(sidebarElement && sidebarToggleElement) {\r\n      sidebarToggleElement.addEventListener(\"click\", () => {\r\n        sidebarElement.classList.toggle(\"collapsed\");\r\n  \r\n        sidebarElement.addEventListener(\"transitionend\", () => {\r\n          window.dispatchEvent(new Event(\"resize\"));\r\n        });\r\n      });\r\n    }\r\n  }\r\n  async _getCategory () {\r\n    try {\r\n      const res = await axios.get(`/api/category-all`);\r\n      const groups = _.groupBy(res.data.result, 'depth');\r\n      const uniqLen = _.uniqBy(res.data.result, 'depth').length;\r\n      let depth0 = [];\r\n      let depth1 = [];\r\n      let depth2 = [];\r\n      for(let i = 0; uniqLen > i; i++) {\r\n        const firstItem = groups[i][0];\r\n        if(firstItem.depth === 0) {\r\n          depth0 = groups[i];\r\n        } else if (firstItem.depth === 1) {\r\n          depth1 = groups[i];\r\n        } else if (firstItem.depth === 2) {\r\n          depth2 = groups[i];\r\n        }\r\n      }\r\n      const categoryList = [];\r\n      depth0.forEach(item => {\r\n        const tempObj = {\r\n          item,\r\n        };\r\n        const tmpArr1 = depth1.filter(d => d.pnode_id === item.node_id);\r\n        tmpArr1.map(r => {\r\n          const subList = depth2.filter(d => d.pnode_id === r.node_id);\r\n          r.sub = subList;\r\n          return r;\r\n        })\r\n        const obj = Object.assign(tempObj.item, {category: tmpArr1});\r\n        categoryList.push(obj);\r\n      })\r\n      // const stateGroups = {\r\n      //   depth0,\r\n      //   depth1,\r\n      //   depth2\r\n      // }\r\n      this.props.setCaterotyGroups(categoryList.find(d => d.node_code === 'posts'));\r\n      this.setState({\r\n        categoryList: categoryList\r\n      })\r\n    } catch(e) {\r\n      console.log('_getCategory error', e);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initialize();\r\n    this._getCategory();\r\n  }\r\n  render() {\r\n    return (\r\n      <nav id=\"sidebar\" className=\"sidebar js-sidebar\">\r\n\t\t\t<div className=\"sidebar-content js-simplebar\" style={{fontFamily: 'STIX Two Text', fontSize: '15px'}}>\r\n      <NavLink exact to=\"/\" className=\"sidebar-brand\">\r\n        <span className=\"align-middle\">Minju's Blog</span>\r\n      </NavLink>\r\n\t\t\t\t<ul className=\"sidebar-nav\">\r\n            {this.state.categoryList.map((info, index) =>\r\n              <div key={index}>\r\n                <MenuHeader menuInfo={info} isMasterUser={this.props.isMasterUser} />\r\n                {info.category.length > 0 && \r\n                  info.category.map((menu, index) => \r\n                    <div key={index}>\r\n                      {info.node_code === 'posts' &&\r\n                        <MenuPostCategory headerInfo={info} menuInfo={menu} isMasterUser={this.props.isMasterUser} />\r\n                      }\r\n                      {info.node_code !== 'posts' &&\r\n                        <MenuSingleCategory headerInfo={info} menuInfo={menu} isMasterUser={this.props.isMasterUser} />\r\n                      }\r\n                    </div>\r\n                  )\r\n                }\r\n                </div>\r\n            )}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavSidebar;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as authActions from \"../../redux/modules/auth\";\r\nimport * as userActions from \"../../redux/modules/users\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport NavSidebar from \"./NavSidebar\";\r\nexport class SidebarContainer extends Component {\r\n \r\n  componentDidMount() {\r\n    console.log('BaseContainer this.props', this.props)\r\n    this.checkUser();\r\n  }\r\n\r\n  checkUser = () => {\r\n    console.log('BaseContainer this.props', this.props)\r\n    const { setUserTemp, history } = this.props;\r\n\r\n    // 먼저 localStorage에 값이 저장되있는지 확인, userInfo값이 있다면, 로그인을 한것으로 인식하고,\r\n    // 바로 setUserTemp를 실시.\r\n    // 이를 하는 이유는 새로고침 했을시, state가 초기화 되어 logged값도 false로 바뀌는데, 새로고침 했을시\r\n    // // 로그인을 유지하기 위함.\r\n    console.log('localStorage.getItem(\"loggedInfo\")--', localStorage.getItem(\"loggedInfo\"));\r\n    if (localStorage.getItem(\"loggedInfo\")) {\r\n      const userInfo = JSON.parse(localStorage.getItem(\"loggedInfo\"));\r\n      setUserTemp({\r\n        id: userInfo.id,\r\n        username: userInfo.username,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // 만약 userInfo값이 localStorage에 없을때에는, api통신을 실시.\r\n    // checkUser();\r\n\r\n    // 만약 checkUser가 실패 했다면, logged는 false로 바뀌므로, 로그인 페이지로 이동시킨다.\r\n    // 또한, /auth/register에서는 /auth/login으로 이동할 필요가 없으므로, auth라는 path가 url에 포함될때는 제외시킨다\r\n    if (!this.props.logged && !window.location.pathname.includes(\"auth\")) {\r\n      // history.push(\"/auth/login\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n//*******connect 한 컴포넌트에서 props 로 내려 받을 수 있다.\r\nconst mapStateToProps = state => ({\r\n  logged: state.users.logged,\r\n  isMasterUser: state.users.isMasterUser,\r\n  userInfo: state.users.userInfo,\r\n  ipInfo: state.users.ipInfo,\r\n  provideInfo: state.users.provideInfo,\r\n  categoryGroups: state.users.categoryGroups,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // checkUser: () => {\r\n    //   dispatch(authActions.checkUser());\r\n    // },\r\n    userCheck: (params) => {\r\n      dispatch(userActions.actionCreators.getProvideUserCheck(params));\r\n    },\r\n    setUserInfo: (info) => {\r\n      dispatch(userActions.actionCreators.setUserInfo(info));\r\n    },\r\n    setUserTemp: ({ id, username }) => {\r\n      dispatch(authActions.setUserTemp({ id, username }));\r\n    },\r\n    setProvideInfo: (info) => {\r\n\t\t\tdispatch({type: 'SET_PROVIDE_USER_CHECK', info})\r\n    },\r\n    setCaterotyGroups: (data) => {\r\n      dispatch(userActions.actionCreators.setCaterotyGroups(data));\r\n    }\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(NavSidebar)\r\n);\r\n// const mapStateToProps = (state) => ({\r\n//   userInfo: state.userInfo\r\n// });\r\n  \r\n//   /*\r\n//   액션 생성 함수를 사용하여 액션을 생성하고,\r\n//   해당 액션을 dispatch하는 함수를 만든 후, 이를 props로 연결\r\n//   */\r\n//   const mapDispatchToProps = (dispatch) => ({\r\n//     setUserTemp: ({ id, username }) => {\r\n//       dispatch(authActions.setUserTemp({ id, username }));\r\n//     }\r\n//     // setUserInfo: (info) => {\r\n//     //   dispatch(authActions.setColor(info));\r\n//     // }\r\n//   });\r\n// const BaseContainer = connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n//   )(InputContents);\r\n  \r\n  // export default BaseContainer;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {isEmpty} from 'lodash';\r\nimport { toast } from \"react-toastify\";\r\nimport DataTableComponent from '../lib/dataDisplay/DataTableCompoenet';\r\nrequire('dotenv').config();\r\nconst crypto = require('crypto');\r\nconst solt = process.env.REACT_APP_HIDDEN_KEY;\r\nclass UserManagement extends Component {\r\n  constructor(props) {\r\n    console.log('props--', props);\r\n    super(props);\r\n    this.state  = {\r\n      password: '', // 첫번째 패스워드\r\n      rePassword: '', // 두번째 패스워드\r\n      pMessage:'패스워드를 입력하세요.', // 확인 메시지 (패스워드 일치여부를 사용자에게 알려주는 메시지)\r\n      show: false,\r\n      blindStyle: {\r\n        width:'100%'\r\n      },\r\n      bodyEle: '',\r\n      loading: true,\r\n      dataList: [],\r\n      groupType: '',\r\n      columns: [],\r\n      writeButton: '',\r\n      isLoading: true,\r\n      contentEl: '',\r\n      editableItem: {}\r\n\r\n    };  // 초기 state값을 셋팅해준다. 빈 스트링 값은 false를 뜻한다.\r\n    this.setEditableItem = this.setEditableItem.bind(this);\r\n    this.handlePassword = this.handlePassword.bind(this);\r\n    this._passwordForm = this._passwordForm.bind(this);\r\n    this.passwordChange = this.passwordChange.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this._getList();\r\n  }\r\n  // componentDidUpdate() {\r\n  //   if(this.state.groupType !== this.props.groupType) {\r\n  //     this.setState({\r\n  //       groupType: this.props.groupType,\r\n  //     });\r\n  //     this._getCateroeyList();\r\n  //   }\r\n  //   console.log('componentDidUpdate--', this.props);\r\n\r\n  // }\r\n  handlePassword = (e) => {\r\n    let list = [];\r\n    debugger\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n    console.log('password changed--', e);\r\n    list = this.state.dataList;\r\n    list.map(d => {\r\n      if(d.id.toString() === e.target.name) {\r\n        d.password = e.target.value;\r\n      }\r\n      return d;\r\n    })\r\n    this.setState({\r\n      dataList: list\r\n    })\r\n  }\r\n\r\n  _passwordForm(d) {\r\n    const inputName = d.id.toString();\r\n    this.setState({\r\n      [inputName]: d.password\r\n    })\r\n    return (\r\n      <div>\r\n        <span>{d.password}</span>\r\n        <input type=\"text\" \r\n        className=\"form-control\"\r\n        style={{display: 'inline-block', width: '40%'}}\r\n        name={inputName} \r\n        value={this.state[inputName]} \r\n        onChange={this.handlePassword} />\r\n        <button type=\"button\" className=\"btn btn-primary\" id={d.id} onClick={this.passwordChange}>수정</button>\r\n      </div>\r\n    )\r\n  }\r\n \r\n  async passwordChange(e) {\r\n    try {\r\n      console.log('passwordChange--', e);\r\n      const targetItem = this.state.dataList.find(d => d.id.toString() === e.target.id);\r\n      console.log('targetItem--', targetItem);\r\n      const changedPassword = this.state[e.target.id];\r\n      const cipher = crypto.createCipher('aes192', solt);\r\n      cipher.update(changedPassword, 'utf8', 'base64'); // javascript는 utf-8 라고 안 씀\r\n      const output = cipher.final('base64');\r\n      await axios.post('/api/user-password-change', {email: targetItem.email, password: output});\r\n      toast.success('저장되었습니다.')\r\n\r\n    } catch(e) {\r\n      toast.error('저장실패');\r\n      console.log(e)\r\n    }\r\n\r\n  }\r\n  _getDataColumns() {\r\n    return [\r\n      {\r\n        name: \"User Name\",\r\n        selector: row => `${row.username}`,\r\n        sortable: true,\r\n        grow: 1,\r\n      },\r\n      {\r\n        name: \"패스워드\",\r\n        selector: row => row.password,\r\n        sortable: true,\r\n        compact: false,\r\n        grow: 8,\r\n        cell: d => this._passwordForm(d)\r\n      },\r\n      {\r\n        name: \"가입일\",\r\n        selector: row => row.create_at,\r\n        sortable: true,\r\n        right: false,\r\n        grow: 1,\r\n        format: d => moment(d.create_at).format('YYYY.MM.DD'),\r\n        // cell: d => <span>{moment(d.created_at).format('YYYY.MM.DD')}</span>,\r\n      }\r\n    ]\r\n  }\r\n  _getPassword(pass) {\r\n    const decipher = crypto.createDecipher('aes192', solt);\r\n    decipher.update(pass, 'base64', 'utf8');\r\n    const deoutput = decipher.final('utf8');\r\n    console.log('복호화된 문자:'+deoutput);\r\n    return deoutput;\r\n  }\r\n  \r\n  _getList = async() => {\r\n    const res = await axios.get('/api/users');\r\n    console.log('users  _getList--', res);\r\n    const tempList = res.data.result.map(d => {\r\n      d.password = this._getPassword(d.password);\r\n      return d;\r\n    })\r\n    this.setState({\r\n      isLoading: false,\r\n      dataList: tempList,\r\n    });\r\n    this.setState({\r\n      columns: this._getDataColumns()\r\n    });\r\n\r\n    this._setContents();\r\n  }\r\n  _setContents() {\r\n    this.setState({\r\n      contentEl: <DataTableComponent columns={this.state.columns} \r\n      dataList={this.state.dataList} \r\n      isLoading={this.state.isLoading} \r\n      isSelectable={true} \r\n      onSelectedChagenItemCB={this.setEditableItem} />\r\n    })\r\n  }\r\n  setEditableItem(item) {\r\n    this.setState({\r\n      editableItem: item\r\n    })\r\n  }\r\n  \r\n  dateTimeFormat(date) {\r\n    return moment(date).format('YYYY.MM.DD');\r\n  }\r\n  // goDetail() {\r\n  //   return href=\"#home\"\r\n  // } \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\" style={{boxShadow: 'unset'}}>\r\n        {this.state.contentEl}\r\n      </div>\r\n      \r\n    );\r\n  }\r\n};\r\n\r\nexport default UserManagement;","import React from 'react';\r\nimport UserManagement from '../components/admin/UserManagement';\r\n\r\nconst Testing = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <UserManagement />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Testing;","// import './App.css';\r\nimport './'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport \"./scss/app.scss\";\r\nimport \"./css/icons.css\";\r\nimport \"./css/base.css\";\r\nimport NavbarExpandTop from './components/navs/NavbarExpandTop';\r\nimport { Route, useLocation } from 'react-router-dom';\r\nimport { Switch } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { Main, Posts, Profile, SignIn, SignUp} from './pages';\r\nimport BaseContainer from './components/auth/BaseContainer';\r\nimport AuthContainer from './components/auth/AuthContainer';\r\nimport LifeCycle from './components/category/menual/react/LifeCycle';\r\nimport ReactEvent from './components/category/menual/react/ReactEvent';\r\nimport Intro from './components/category/menual/react/Intro';\r\nimport Resume from './components/resume/Resume';\r\nimport ContentsContainer from './components/contents/ContentsContainer';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport AdminContainer from './components/admin/AdminContainer';\r\nimport SidebarContainer from './components/navs/SidebarContainer';\r\nimport Testing from './pages/Testing';\r\n\r\nconst App = (props) => {\r\n  console.log('App props', props);\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <SidebarContainer store={props.store} />\r\n        <div className=\"main\">\r\n        <NavbarExpandTop />\r\n        <Route exact path=\"/\" component={ContentsContainer}/>\r\n        <Switch>\r\n          <Route path=\"/profile/:name\" component={Profile}/>\r\n          <Route path=\"/profile\" component={Profile}/>\r\n        </Switch>\r\n        <Switch>\r\n          {/* <Route path=\"/sign-in/:name\" component={BaseContainer}/>\r\n          <Route path=\"/sign-in\" render={() => <BaseContainer store={props.store}/>}/> */}\r\n          <Route path=\"/auth/login/:name\" component={BaseContainer}/>\r\n          <Route path=\"/auth/login\" render={() => <BaseContainer store={props.store}/>}/>\r\n        </Switch>\r\n        <Switch>\r\n          <Route path=\"/auth/sign-up/:name\" component={SignUp}/>\r\n          <Route path=\"/auth/sign-up\" component={SignUp}/>\r\n        </Switch>\r\n        <Route path=\"/posts\" component={Posts}/>\r\n        <Route path=\"/resume\" component={Resume}/>\r\n        <Route path=\"/react/lifecycle\" component={LifeCycle}/>\r\n        <Route path=\"/react/event\" component={ReactEvent}/>\r\n        <Route path=\"/react/intro\" component={Intro}/>\r\n        <Route path=\"/admin\" component={AdminContainer}/>\r\n        <Route path=\"/testing\" component={Testing}/>\r\n        {/* <Route path=\"*\">\r\n          <NoMatch />\r\n        </Route> */}\r\n        <AuthContainer />\r\n        {/* info, success, warning, error, default, dark */}\r\n        <ToastContainer\r\n          position=\"bottom-center\"\r\n          hideProgressBar={false}\r\n          autoClose={1500} />\r\n          {/* <footer className=\"footer\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row text-muted\">\r\n                <div className=\"col-6 text-start\">\r\n                  <p className=\"mb-0\">\r\n                    <a className=\"text-muted\" href=\"https://adminkit.io/\" target=\"_blank\"><strong>AdminKit Demo</strong></a> &copy;\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-6 text-end\">\r\n                  <ul className=\"list-inline\">\r\n                    <li className=\"list-inline-item\">\r\n                      <a className=\"text-muted\" href=\"https://adminkit.io/\" target=\"_blank\">Support</a>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                      <a className=\"text-muted\" href=\"https://adminkit.io/\" target=\"_blank\">Help Center</a>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                      <a className=\"text-muted\" href=\"https://adminkit.io/\" target=\"_blank\">Privacy</a>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                      <a className=\"text-muted\" href=\"https://adminkit.io/\" target=\"_blank\">Terms</a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </footer> */}\r\n        </div>\r\n      </div>\r\n\r\n  )\r\n}\r\nfunction NoMatch() {\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        No match for <code>{location.pathname}</code>\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { routerReducer, routerMiddleware } from \"react-router-redux\";\r\nimport users from \"./modules/users\";\r\nimport auth from \"./modules/auth\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport  { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst env = process.env.NODE_ENV;\r\n\r\nconst history = createBrowserHistory()\r\n\r\nconst middlewares = [thunk, routerMiddleware(history)];\r\n\r\nif(env === 'development') {\r\n  const { logger } = require(\"redux-logger\");\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst reducer = combineReducers({\r\n  auth,\r\n  users,\r\n  routing: routerReducer,\r\n});\r\n\r\nlet store;\r\n\r\nif (env === \"development\") {\r\n  store = initialState =>\r\n    createStore(reducer,\r\n    composeWithDevTools(applyMiddleware(...middlewares)));\r\n} else {\r\n  store = initialState => createStore(reducer, applyMiddleware(...middlewares));\r\n}\r\n\r\nexport { history };\r\n\r\nexport default store();","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport { Provider } from \"react-redux\";\r\nimport store from './redux/configureStore';\r\n// import {createStore} from 'redux';\r\n// import reducers from './reducers';\r\n\r\n// const store = createStore(reducers);\r\n\r\nconst Root = () => {\r\n    console.log(store.getState())\r\n    \r\n    return (\r\n\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App store={store}/>\r\n      </BrowserRouter>\r\n    </Provider>\r\n)};\r\nstore.subscribe(Root);\r\nRoot();\r\nexport default Root;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\n// import reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<Root />, document.getElementById('root'));\nrequire('dotenv').config();\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nserviceWorker.register();\n"],"sourceRoot":""}